<Application x:Class="OpenSpanWPF.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
	xmlns:Custom="http://schemas.microsoft.com/wpf/2008/toolkit" 
    mc:Ignorable="d"
             xmlns:vsm="clr-namespace:System.Windows;assembly=WPFToolkit"
             xmlns:l="clr-namespace:OpenSpanWPF"
    xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Luna"
    StartupUri="OpenSpanWPFWindow.xaml">

    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="DiagramDesigner/Resources/Styles/Shared.xaml"/>
                <ResourceDictionary Source="DiagramDesigner/Resources/Styles/ToolBar.xaml"/>
                <ResourceDictionary Source="DiagramDesigner/Resources/Styles/GroupBox.xaml"/>
                <ResourceDictionary Source="DiagramDesigner/Resources/Styles/Expander.xaml"/>
                <ResourceDictionary Source="DiagramDesigner/Resources/Styles/ScrollBar.xaml"/>
                <ResourceDictionary Source="DiagramDesigner/Resources/ApplicationToolbar.xaml"/>
                <ResourceDictionary Source="DiagramDesigner/Resources/DesignerItem.xaml"/>
                <ResourceDictionary Source="DiagramDesigner/Resources/ToolboxItem.xaml"/>
                <ResourceDictionary Source="DiagramDesigner/Resources/Toolbox.xaml"/>
                <ResourceDictionary Source="DiagramDesigner/Resources/Connection.xaml"/>
                <ResourceDictionary Source="DiagramDesigner/Resources/Stencils/FlowChartStencils.xaml"/>
                <ResourceDictionary Source="DiagramDesigner/Resources/Stencils/ShapeStencils.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <l:DateTimeConverter x:Key="DateTimeFormatter"/>

            <SolidColorBrush x:Key="Brush_BackgroundLightGrey" Color="#FFF2F2F2"/>
            <LinearGradientBrush x:Key="Brush_BackgroundGradBlack" EndPoint="0.5,1" StartPoint="0.5,0">
                <GradientStop Color="Gray" Offset="0"/>
                <GradientStop Color="Black" Offset="1"/>
            </LinearGradientBrush>

            <LinearGradientBrush x:Key="Brush_BackgroundGradOrange" EndPoint="0.5,1" StartPoint="0.5,0">
                <GradientStop Color="Gray" Offset="0"/>
                <GradientStop Color="#F78F1E" Offset="1"/>
            </LinearGradientBrush>

            <LinearGradientBrush x:Key="Brush_BackgroundGradBlue" EndPoint="0.5,1" StartPoint="0.5,0">
                <GradientStop Color="Gray" Offset="0"/>
                <GradientStop Color="#72BFD9" Offset="1"/>
            </LinearGradientBrush>

            <LinearGradientBrush x:Key="Brush_BackgroundGradGrayOrange" EndPoint="0.5,1" StartPoint="0.5,0">
                <GradientStop Color="Gray" Offset="1"/>
                <GradientStop Color="#F78F1E" Offset="0"/>
            </LinearGradientBrush>

            <SolidColorBrush x:Key="Brush_BackgroundGrey" Color="Gray"  />

            <SolidColorBrush x:Key="Brush_BorderDarkerGrey" Color="#FFC6C6C6"/>
            <SolidColorBrush x:Key="Brush_BorderGrey" Color="#FFDADADA"/>
            <LinearGradientBrush x:Key="Brush_ButtonBgDarkGrey" EndPoint="0.5,1" StartPoint="0.5,0">
                <GradientStop Color="#FF828181"/>
                <GradientStop Color="#FF676767" Offset="1"/>
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="Brush_ButtonBgLightGrey" EndPoint="0.5,1" StartPoint="0.5,0">
                <GradientStop Color="White" Offset="0"/>
                <GradientStop Color="#FFCCCCCC" Offset="1"/>
            </LinearGradientBrush>
            <SolidColorBrush x:Key="Brush_DarkGrey" Color="#FF666666"/>
            <SolidColorBrush x:Key="Brush_DataGridHeaderBackground" Color="#FFDDDDDD"/>
            <LinearGradientBrush x:Key="Brush_GlossyGreen" EndPoint="0.5,1" StartPoint="0.5,0">
                <GradientStop Color="#FF77BE7E" Offset="0"/>
                <GradientStop Color="#FF009D0E" Offset="1"/>
                <GradientStop Color="#FF2AA435" Offset="0.5"/>
                <GradientStop Color="#FF009C0C" Offset="0.51"/>
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="Brush_GlossyGrey" EndPoint="0.5,1" StartPoint="0.5,0">
                <GradientStop Color="#FFB3B3B3" Offset="0"/>
                <GradientStop Color="#FF4E4E4E" Offset="1"/>
                <GradientStop Color="#FF8A8A8A" Offset="0.5"/>
                <GradientStop Color="#FF7F7F7F" Offset="0.51"/>
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="Brush_GlossyLightGrey" EndPoint="0.5,1" StartPoint="0.5,0">
                <GradientStop Color="#FFE3E2E2" Offset="1"/>
                <GradientStop Color="White"/>
                <GradientStop Color="#FFEEEEEE" Offset="0.5"/>
                <GradientStop Color="#FFE3E2E2" Offset="0.51"/>
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="Brush_GlossyRed" EndPoint="0.5,1" StartPoint="0.5,0">
                <GradientStop Color="#FF990000" Offset="1"/>
                <GradientStop Color="#FFCC0000"/>
                <GradientStop Color="#FF990000" Offset="0.5"/>
                <GradientStop Color="#FFAB0101" Offset="0.49"/>
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="Brush_GlossyYellow" EndPoint="0.5,1" StartPoint="0.5,0">
                <GradientStop Color="#FFF6DC23" Offset="0"/>
                <GradientStop Color="#FFF0BF22" Offset="1"/>
                <GradientStop Color="#FFF6CC23" Offset="0.5"/>
                <GradientStop Color="#FFF0BF22" Offset="0.51"/>
            </LinearGradientBrush>
            <SolidColorBrush x:Key="Brush_HighlightRed" Color="#FFCC0000"/>
            <SolidColorBrush x:Key="Brush_HighlightItem" Color="#19FF0000"/>
            <SolidColorBrush x:Key="Brush_Grey" Color="#FF999999"/>
            <SolidColorBrush x:Key="Brush_LightGrey" Color="#FFCCCCCC"/>
            <SolidColorBrush x:Key="Brush_LighterGrey" Color="#FFEEEEEE"/>
            <LinearGradientBrush x:Key="Brush_TabItemBg" EndPoint="0.5,1" StartPoint="0.5,0">
                <GradientStop Color="#FFF2F1F1" Offset="0"/>
                <GradientStop Color="#FFE4E2E2" Offset="1"/>
                <GradientStop Color="#FFF2F1F1" Offset="0.5"/>
                <GradientStop Color="#FFE4E2E2" Offset="0.51"/>
            </LinearGradientBrush>
            <SolidColorBrush x:Key="Brush_TextDarkGrey" Color="#FF333333"/>
            <SolidColorBrush x:Key="Brush_TextRed" Color="#FF660000"/>
            <SolidColorBrush x:Key="Brush_ModalBorder" Color="#60000000"/>
            <SolidColorBrush x:Key="Brush_ModalBackground" Color="#4C000000"/>
            <!-- Resource dictionary entries should be defined here. -->
            <Style TargetType="{x:Type ScrollBar}">
                <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="1, 0" StartPoint="0, 0">
                            <GradientStop Color="#EEEDE5" Offset="0"/>
                            <GradientStop Color="#EEEDE5" Offset="0.05"/>
                            <GradientStop Color="#F3F1EC" Offset="0.06"/>
                            <GradientStop Color="#FEFEFE" Offset="0.94"/>
                            <GradientStop Color="#EEEDE5" Offset="0.95"/>
                            <GradientStop Color="#EEEDE5" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
                <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Border BorderBrush="{DynamicResource Brush_BorderDarkerGrey}" BorderThickness="1">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="1.014,0.5" StartPoint="-0.014,0.5">
                                        <GradientStop Color="#FFD6D6D6"/>
                                        <GradientStop Color="#FFEDEDED" Offset="0.534"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Grid SnapsToDevicePixels="true">
                                    <Grid.RowDefinitions>
                                        <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                        <RowDefinition Height="0.00001*"/>
                                        <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                    </Grid.RowDefinitions>
                                    <RepeatButton Command="{x:Static ScrollBar.LineUpCommand}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="UpArrow">
                                        <RepeatButton.Style>
                                            <Style TargetType="{x:Type RepeatButton}">
                                                <Setter Property="OverridesDefaultStyle" Value="true"/>
                                                <Setter Property="Focusable" Value="false"/>
                                                <Setter Property="IsTabStop" Value="false"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                            <Border Background="{DynamicResource Brush_ButtonBgLightGrey}" BorderBrush="{DynamicResource Brush_Grey}" CornerRadius="2">
                                                                <Border.Effect>
                                                                    <DropShadowEffect BlurRadius="3" Opacity="0.8" ShadowDepth="0"/>
                                                                </Border.Effect>
                                                                <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="Center" VerticalAlignment="Center" Height="Auto"/>
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter Property="Opacity" TargetName="contentPresenter" Value="0.7"/>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Opacity" TargetName="contentPresenter" Value="0.7"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </RepeatButton.Style>
                                        <Path x:Name="path" Stretch="Fill" StrokeLineJoin="Round" Data="F1 M 75.5,131.038L 121.432,51.4811L 29.568,51.4811L 75.5,131.038 Z " Width="9" Height="6" Fill="{DynamicResource Brush_TextDarkGrey}" RenderTransformOrigin="0.5,0.5">
                                            <Path.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform/>
                                                    <SkewTransform/>
                                                    <RotateTransform Angle="180"/>
                                                    <TranslateTransform/>
                                                </TransformGroup>
                                            </Path.RenderTransform>
                                        </Path>
                                    </RepeatButton>
                                    <Track x:Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
                                        <Track.Thumb>
                                            <Thumb Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="VerticalGripper" Margin="-1,0">
                                                <Thumb.Style>
                                                    <Style TargetType="{x:Type Thumb}">
                                                        <Setter Property="OverridesDefaultStyle" Value="true"/>
                                                        <Setter Property="IsTabStop" Value="false"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                                    <Border x:Name="border" Background="{DynamicResource Brush_ButtonBgDarkGrey}" CornerRadius="2">
                                                                        <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Width="7" Height="Auto" Opacity="0.3">
                                                                            <Path Stretch="Fill" Stroke="White" Width="Auto" Height="1" Data="M8,47 L120,47"/>
                                                                            <Path Stretch="Fill" Stroke="Black" Margin="0,0,0,2" Width="Auto" Height="1" Data="M8,47 L120,47"/>
                                                                            <Path Stretch="Fill" Stroke="White" Width="Auto" Height="1" Data="M8,47 L120,47"/>
                                                                            <Path Stretch="Fill" Stroke="Black" Margin="0,0,0,2" Width="Auto" Height="1" Data="M8,47 L120,47"/>
                                                                            <Path Stretch="Fill" Stroke="White" Width="Auto" Height="1" Data="M8,47 L120,47"/>
                                                                            <Path Stretch="Fill" Stroke="Black" Width="Auto" Height="1" Data="M8,47 L120,47"/>
                                                                        </StackPanel>
                                                                    </Border>
                                                                    <ControlTemplate.Triggers>
                                                                        <Trigger Property="IsMouseOver" Value="True">
                                                                            <Setter Property="Opacity" TargetName="border" Value="0.7"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsDragging" Value="True">
                                                                            <Setter Property="Opacity" TargetName="border" Value="0.7"/>
                                                                        </Trigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </Thumb.Style>
                                            </Thumb>
                                        </Track.Thumb>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}">
                                                <RepeatButton.Style>
                                                    <Style TargetType="{x:Type RepeatButton}">
                                                        <Setter Property="OverridesDefaultStyle" Value="true"/>
                                                        <Setter Property="Background" Value="Transparent"/>
                                                        <Setter Property="Focusable" Value="false"/>
                                                        <Setter Property="IsTabStop" Value="false"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                    <Rectangle x:Name="Bg" Fill="{TemplateBinding Background}"/>
                                                                    <ControlTemplate.Triggers>
                                                                        <Trigger Property="IsPressed" Value="true">
                                                                            <Setter Property="Fill" TargetName="Bg">
                                                                                <Setter.Value>
                                                                                    <LinearGradientBrush EndPoint="1, 0" StartPoint="0, 0">
                                                                                        <GradientStop Color="#D7D5C2" Offset="0"/>
                                                                                        <GradientStop Color="#D7D5C2" Offset="0.05"/>
                                                                                        <GradientStop Color="#E3DED3" Offset="0.06"/>
                                                                                        <GradientStop Color="#FDFDF6" Offset="0.94"/>
                                                                                        <GradientStop Color="#D7D5C2" Offset="0.95"/>
                                                                                        <GradientStop Color="#D7D5C2" Offset="1"/>
                                                                                    </LinearGradientBrush>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                        </Trigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </RepeatButton.Style>
                                            </RepeatButton>
                                        </Track.IncreaseRepeatButton>
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}">
                                                <RepeatButton.Style>
                                                    <Style TargetType="{x:Type RepeatButton}">
                                                        <Setter Property="OverridesDefaultStyle" Value="true"/>
                                                        <Setter Property="Background" Value="Transparent"/>
                                                        <Setter Property="Focusable" Value="false"/>
                                                        <Setter Property="IsTabStop" Value="false"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                    <Rectangle x:Name="Bg" Fill="{TemplateBinding Background}"/>
                                                                    <ControlTemplate.Triggers>
                                                                        <Trigger Property="IsPressed" Value="true">
                                                                            <Setter Property="Fill" TargetName="Bg">
                                                                                <Setter.Value>
                                                                                    <LinearGradientBrush EndPoint="1, 0" StartPoint="0, 0">
                                                                                        <GradientStop Color="#D7D5C2" Offset="0"/>
                                                                                        <GradientStop Color="#D7D5C2" Offset="0.05"/>
                                                                                        <GradientStop Color="#E3DED3" Offset="0.06"/>
                                                                                        <GradientStop Color="#FDFDF6" Offset="0.94"/>
                                                                                        <GradientStop Color="#D7D5C2" Offset="0.95"/>
                                                                                        <GradientStop Color="#D7D5C2" Offset="1"/>
                                                                                    </LinearGradientBrush>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                        </Trigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </RepeatButton.Style>
                                            </RepeatButton>
                                        </Track.DecreaseRepeatButton>
                                    </Track>
                                    <RepeatButton Command="{x:Static ScrollBar.LineDownCommand}" Grid.Row="2" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="DownArrow" RenderTransformOrigin="0.5,0.5">
                                        <RepeatButton.Style>
                                            <Style TargetType="{x:Type RepeatButton}">
                                                <Setter Property="OverridesDefaultStyle" Value="true"/>
                                                <Setter Property="Focusable" Value="false"/>
                                                <Setter Property="IsTabStop" Value="false"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                            <Border Background="{DynamicResource Brush_ButtonBgLightGrey}" BorderBrush="{DynamicResource Brush_Grey}" CornerRadius="2">
                                                                <Border.Effect>
                                                                    <DropShadowEffect BlurRadius="3" Opacity="0.8" ShadowDepth="0"/>
                                                                </Border.Effect>
                                                                <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="Center" VerticalAlignment="Center" Height="Auto"/>
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter Property="Opacity" TargetName="contentPresenter" Value="0.7"/>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Opacity" TargetName="contentPresenter" Value="0.7"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </RepeatButton.Style>
                                        <Path x:Name="path_Copy" Stretch="Fill" StrokeLineJoin="Round" Data="F1 M 75.5,131.038L 121.432,51.4811L 29.568,51.4811L 75.5,131.038 Z " Width="9" Height="6" Fill="{DynamicResource Brush_TextDarkGrey}" RenderTransformOrigin="0.5,0.5"/>
                                    </RepeatButton>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="Orientation" Value="Horizontal">
                        <Setter Property="Width" Value="Auto"/>
                        <Setter Property="MinWidth" Value="0"/>
                        <Setter Property="Background">
                            <Setter.Value>
                                <LinearGradientBrush EndPoint="0, 1" StartPoint="0, 0">
                                    <GradientStop Color="#EEEDE5" Offset="0"/>
                                    <GradientStop Color="#EEEDE5" Offset="0.05"/>
                                    <GradientStop Color="#F3F1EC" Offset="0.06"/>
                                    <GradientStop Color="#FEFEFE" Offset="0.94"/>
                                    <GradientStop Color="#EEEDE5" Offset="0.95"/>
                                    <GradientStop Color="#EEEDE5" Offset="1"/>
                                </LinearGradientBrush>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                        <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ScrollBar}">
                                    <Grid SnapsToDevicePixels="true" Background="{TemplateBinding Background}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                            <ColumnDefinition Width="0.00001*"/>
                                            <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                        </Grid.ColumnDefinitions>
                                        <RepeatButton Command="{x:Static ScrollBar.LineLeftCommand}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="LeftArrow">
                                            <RepeatButton.Style>
                                                <Style TargetType="{x:Type RepeatButton}">
                                                    <Setter Property="OverridesDefaultStyle" Value="true"/>
                                                    <Setter Property="Focusable" Value="false"/>
                                                    <Setter Property="IsTabStop" Value="false"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                <Border Background="{DynamicResource Brush_ButtonBgLightGrey}" BorderBrush="{DynamicResource Brush_Grey}" CornerRadius="2">
                                                                    <Border.Effect>
                                                                        <DropShadowEffect BlurRadius="3" Opacity="0.8" ShadowDepth="0"/>
                                                                    </Border.Effect>
                                                                    <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="Center" VerticalAlignment="Center" Height="Auto"/>
                                                                </Border>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter Property="Opacity" TargetName="contentPresenter" Value="0.7"/>
                                                                    </Trigger>
                                                                    <Trigger Property="IsPressed" Value="True">
                                                                        <Setter Property="Opacity" TargetName="contentPresenter" Value="0.7"/>
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </RepeatButton.Style>
                                            <Path x:Name="path" Stretch="Fill" StrokeLineJoin="Round" Data="F1 M 75.5,131.038L 121.432,51.4811L 29.568,51.4811L 75.5,131.038 Z " Width="9" Height="6" Fill="{DynamicResource Brush_TextDarkGrey}" RenderTransformOrigin="0.5,0.5">
                                                <Path.RenderTransform>
                                                    <TransformGroup>
                                                        <ScaleTransform/>
                                                        <SkewTransform/>
                                                        <RotateTransform Angle="90"/>
                                                        <TranslateTransform/>
                                                    </TransformGroup>
                                                </Path.RenderTransform>
                                            </Path>
                                        </RepeatButton>
                                        <Track x:Name="PART_Track" Grid.Column="1">
                                            <Track.Thumb>
                                                <Thumb Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="HorizontalGripper">
                                                    <Thumb.Style>
                                                        <Style TargetType="{x:Type Thumb}">
                                                            <Setter Property="OverridesDefaultStyle" Value="true"/>
                                                            <Setter Property="IsTabStop" Value="false"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                                                        <Border x:Name="border" Background="{DynamicResource Brush_ButtonBgDarkGrey}" CornerRadius="2">
                                                                            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Width="7" Height="Auto" Opacity="0.3">
                                                                                <Path Stretch="Fill" Stroke="White" Width="Auto" Height="1" Data="M8,47 L120,47"/>
                                                                                <Path Stretch="Fill" Stroke="Black" Margin="0,0,0,2" Width="Auto" Height="1" Data="M8,47 L120,47"/>
                                                                                <Path Stretch="Fill" Stroke="White" Width="Auto" Height="1" Data="M8,47 L120,47"/>
                                                                                <Path Stretch="Fill" Stroke="Black" Margin="0,0,0,2" Width="Auto" Height="1" Data="M8,47 L120,47"/>
                                                                                <Path Stretch="Fill" Stroke="White" Width="Auto" Height="1" Data="M8,47 L120,47"/>
                                                                                <Path Stretch="Fill" Stroke="Black" Width="Auto" Height="1" Data="M8,47 L120,47"/>
                                                                            </StackPanel>
                                                                        </Border>
                                                                        <ControlTemplate.Triggers>
                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                <Setter Property="Opacity" TargetName="border" Value="0.7"/>
                                                                            </Trigger>
                                                                            <Trigger Property="IsDragging" Value="True">
                                                                                <Setter Property="Opacity" TargetName="border" Value="0.7"/>
                                                                            </Trigger>
                                                                        </ControlTemplate.Triggers>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </Thumb.Style>
                                                </Thumb>
                                            </Track.Thumb>
                                            <Track.IncreaseRepeatButton>
                                                <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}">
                                                    <RepeatButton.Style>
                                                        <Style TargetType="{x:Type RepeatButton}">
                                                            <Setter Property="OverridesDefaultStyle" Value="true"/>
                                                            <Setter Property="Background" Value="Transparent"/>
                                                            <Setter Property="Focusable" Value="false"/>
                                                            <Setter Property="IsTabStop" Value="false"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                        <Rectangle x:Name="Bg" Fill="{TemplateBinding Background}"/>
                                                                        <ControlTemplate.Triggers>
                                                                            <Trigger Property="IsPressed" Value="true">
                                                                                <Setter Property="Fill" TargetName="Bg">
                                                                                    <Setter.Value>
                                                                                        <LinearGradientBrush EndPoint="0, 1" StartPoint="0, 0">
                                                                                            <GradientStop Color="#D7D5C2" Offset="0"/>
                                                                                            <GradientStop Color="#D7D5C2" Offset="0.05"/>
                                                                                            <GradientStop Color="#E3DED3" Offset="0.06"/>
                                                                                            <GradientStop Color="#FDFDF6" Offset="0.94"/>
                                                                                            <GradientStop Color="#D7D5C2" Offset="0.95"/>
                                                                                            <GradientStop Color="#D7D5C2" Offset="1"/>
                                                                                        </LinearGradientBrush>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                            </Trigger>
                                                                        </ControlTemplate.Triggers>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </RepeatButton.Style>
                                                </RepeatButton>
                                            </Track.IncreaseRepeatButton>
                                            <Track.DecreaseRepeatButton>
                                                <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}">
                                                    <RepeatButton.Style>
                                                        <Style TargetType="{x:Type RepeatButton}">
                                                            <Setter Property="OverridesDefaultStyle" Value="true"/>
                                                            <Setter Property="Background" Value="Transparent"/>
                                                            <Setter Property="Focusable" Value="false"/>
                                                            <Setter Property="IsTabStop" Value="false"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                        <Rectangle x:Name="Bg" Fill="{TemplateBinding Background}"/>
                                                                        <ControlTemplate.Triggers>
                                                                            <Trigger Property="IsPressed" Value="true">
                                                                                <Setter Property="Fill" TargetName="Bg">
                                                                                    <Setter.Value>
                                                                                        <LinearGradientBrush EndPoint="0, 1" StartPoint="0, 0">
                                                                                            <GradientStop Color="#D7D5C2" Offset="0"/>
                                                                                            <GradientStop Color="#D7D5C2" Offset="0.05"/>
                                                                                            <GradientStop Color="#E3DED3" Offset="0.06"/>
                                                                                            <GradientStop Color="#FDFDF6" Offset="0.94"/>
                                                                                            <GradientStop Color="#D7D5C2" Offset="0.95"/>
                                                                                            <GradientStop Color="#D7D5C2" Offset="1"/>
                                                                                        </LinearGradientBrush>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                            </Trigger>
                                                                        </ControlTemplate.Triggers>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </RepeatButton.Style>
                                                </RepeatButton>
                                            </Track.DecreaseRepeatButton>
                                        </Track>
                                        <RepeatButton Command="{x:Static ScrollBar.LineRightCommand}" Grid.Column="2" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="RightArrow">
                                            <RepeatButton.Style>
                                                <Style TargetType="{x:Type RepeatButton}">
                                                    <Setter Property="OverridesDefaultStyle" Value="true"/>
                                                    <Setter Property="Focusable" Value="false"/>
                                                    <Setter Property="IsTabStop" Value="false"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                <Border Background="{DynamicResource Brush_ButtonBgLightGrey}" BorderBrush="{DynamicResource Brush_Grey}" CornerRadius="2">
                                                                    <Border.Effect>
                                                                        <DropShadowEffect BlurRadius="3" Opacity="0.8" ShadowDepth="0"/>
                                                                    </Border.Effect>
                                                                    <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="Center" VerticalAlignment="Center" Height="Auto"/>
                                                                </Border>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter Property="Opacity" TargetName="contentPresenter" Value="0.7"/>
                                                                    </Trigger>
                                                                    <Trigger Property="IsPressed" Value="True">
                                                                        <Setter Property="Opacity" TargetName="contentPresenter" Value="0.7"/>
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </RepeatButton.Style>
                                            <Path x:Name="path_Copy" Stretch="Fill" StrokeLineJoin="Round" Data="F1 M 75.5,131.038L 121.432,51.4811L 29.568,51.4811L 75.5,131.038 Z " Width="9" Height="6" Fill="{DynamicResource Brush_TextDarkGrey}" RenderTransformOrigin="0.5,0.5">
                                                <Path.RenderTransform>
                                                    <TransformGroup>
                                                        <ScaleTransform/>
                                                        <SkewTransform/>
                                                        <RotateTransform Angle="-90"/>
                                                        <TranslateTransform/>
                                                    </TransformGroup>
                                                </Path.RenderTransform>
                                            </Path>
                                        </RepeatButton>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="UserControl" x:Key="AnimatedUserControl">
                <Setter Property="Visibility" Value="Collapsed"/>
                <Style.Triggers>
                    <Trigger Property="Visibility" Value="Visible">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="Opacity"
                             From="0.0" To="1.0" Duration="0:0:3.0"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                    </Trigger>
                </Style.Triggers>
            </Style>



            <Style x:Key="Button_Breadcrumb" TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle">
                    <Setter.Value>
                        <Style>
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Rectangle Stroke="Black" StrokeDashArray="1 2" StrokeThickness="1" Margin="3" SnapsToDevicePixels="true"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFFFFFFF" Offset="0"/>
                            <GradientStop Color="#FFF0F0EA" Offset="0.9"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderBrush" Value="#FF003C74"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid x:Name="grid" Width="Auto" Height="40">
                                <Path x:Name="path" Stretch="Fill" Stroke="{DynamicResource Brush_BorderGrey}" HorizontalAlignment="Left" Width="24.167" Data="M16.666667,-1.0256193 L0,20 16.666667,41.025568 -19.607844,41.025568 -19.607844,-1.0256193 z" StrokeStartLineCap="Round" StrokeEndLineCap="Round" Margin="-12,-1.002,0,-1.002" RenderTransformOrigin="0.5,0.5">
                                    <Path.Fill>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFF5F4F4" Offset="1"/>
                                            <GradientStop Color="White"/>
                                        </LinearGradientBrush>
                                    </Path.Fill>
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="-1" ScaleY="1"/>
                                            <SkewTransform AngleX="0" AngleY="0"/>
                                            <RotateTransform Angle="0"/>
                                            <TranslateTransform X="-0.042000000000001592"/>
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                                <Grid x:Name="border" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                    <Grid.Background>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFF5F4F4" Offset="1"/>
                                            <GradientStop Color="White"/>
                                        </LinearGradientBrush>
                                    </Grid.Background>
                                    <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" HorizontalAlignment="Center" Margin="15,0,27,0" VerticalAlignment="Center"/>
                                    <Image x:Name="image" Stretch="None" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="Collapsed" Margin="15,0,27,0"/>
                                    <Path x:Name="path_Copy" Stretch="Fill" Stroke="{DynamicResource Brush_BorderGrey}" HorizontalAlignment="Right" Width="13.286" Data="M99.301236,-1.0256193 L111.08381,20 99.301236,41.025568 z" StrokeStartLineCap="Round" StrokeEndLineCap="Round" Margin="0,-1.002,-12.274,-1.002" RenderTransformOrigin="0.5,0.5" StrokeThickness="0">
                                        <Path.Fill>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="#FFF5F4F4" Offset="1"/>
                                                <GradientStop Color="White"/>
                                            </LinearGradientBrush>
                                        </Path.Fill>
                                        <Path.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform ScaleX="1" ScaleY="1"/>
                                                <SkewTransform AngleX="0" AngleY="0"/>
                                                <RotateTransform Angle="0"/>
                                                <TranslateTransform X="-0.041999999999987381"/>
                                            </TransformGroup>
                                        </Path.RenderTransform>
                                    </Path>
                                </Grid>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Content" Value="{x:Null}">
                                    <Setter Property="Visibility" TargetName="image" Value="Visible"/>
                                    <Setter Property="Visibility" TargetName="path" Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Fill" TargetName="path" Value="{DynamicResource Brush_GlossyLightGrey}"/>
                                    <Setter Property="Background" TargetName="border" Value="{DynamicResource Brush_GlossyLightGrey}"/>
                                    <Setter Property="Fill" TargetName="path_Copy" Value="{DynamicResource Brush_GlossyLightGrey}"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="true"/>
                                <Trigger Property="ToggleButton.IsChecked" Value="true"/>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- phase 2 added -->

            <Style x:Key="Button_Breadcrumb_Vertical" TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle">
                    <Setter.Value>
                        <Style>
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Rectangle Stroke="Black" StrokeDashArray="1 2" StrokeThickness="1" Margin="3" SnapsToDevicePixels="true"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFFFFFFF" Offset="0"/>
                            <GradientStop Color="#FFF0F0EA" Offset="0.9"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderBrush" Value="#FF003C74"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid x:Name="grid2" VerticalAlignment="Top">
                                <!-- M0,0 L50,-25 100,0 M 0,0 L0,60 50,30 100,60 100,0 -->
                                <Path x:Name="path" Stroke="Gray" VerticalAlignment="Center" HorizontalAlignment="Center" Data="M0,0 L50,10 100,0 M 0,0 L0,60 50,70 100,60 100,0" StrokeStartLineCap="Round" StrokeEndLineCap="Round" RenderTransformOrigin="0.5,0.5" StrokeThickness="0">
                                    <Path.Fill>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFF5F4F4" Offset="1"/>
                                            <GradientStop Color="White"/>
                                        </LinearGradientBrush>
                                    </Path.Fill>
                                </Path>

                                <Grid x:Name="border" VerticalAlignment="Center">
                                    <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                                    <Image x:Name="image"  Stretch="None" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="Collapsed" Margin="0"/>
                                </Grid>

                            </Grid>

                            <ControlTemplate.Triggers>
                                <Trigger Property="Content" Value="{x:Null}">
                                    <Setter Property="Visibility" TargetName="image" Value="Visible"/>
                                    <!-- <Setter Property="Visibility" TargetName="path" Value="Collapsed"/> -->
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Fill" TargetName="path" Value="{DynamicResource Brush_GlossyLightGrey}"/>
                                    <!--<Setter Property="Background" TargetName="border" Value="{DynamicResource Brush_GlossyLightGrey}"/>
                            <Setter Property="Fill" TargetName="path_Copy" Value="{DynamicResource Brush_GlossyLightGrey}"/>-->
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="true"/>
                                <Trigger Property="ToggleButton.IsChecked" Value="true"/>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- end phase 2 added -->

            <Style x:Key="Button_MouseOver_70%" TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle">
                    <Setter.Value>
                        <Style>
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Rectangle Margin="3" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFFFFFFF" Offset="0"/>
                            <GradientStop Color="#FFF0F0EA" Offset="0.9"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderBrush" Value="#FF003C74"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <ControlTemplate.Resources>
                                <Storyboard x:Key="SB_MouseOver">
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.7"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </ControlTemplate.Resources>
                            <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.ExitActions>
                                        <RemoveStoryboard BeginStoryboardName="SB_MouseOver_BeginStoryboard"/>
                                    </Trigger.ExitActions>
                                    <Trigger.EnterActions>
                                        <BeginStoryboard x:Name="SB_MouseOver_BeginStoryboard" Storyboard="{StaticResource SB_MouseOver}"/>
                                    </Trigger.EnterActions>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="true"/>
                                <Trigger Property="ToggleButton.IsChecked" Value="true"/>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="Button_MouseOver_NoChange" TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle">
                    <Setter.Value>
                        <Style>
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Rectangle Margin="3" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFFFFFFF" Offset="0"/>
                            <GradientStop Color="#FFF0F0EA" Offset="0.9"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderBrush" Value="#FF003C74"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsKeyboardFocused" Value="true"/>
                                <Trigger Property="ToggleButton.IsChecked" Value="true"/>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="Button_MouseOver_Underline" TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle">
                    <Setter.Value>
                        <Style>
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Rectangle Margin="3" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFFFFFFF" Offset="0"/>
                            <GradientStop Color="#FFF0F0EA" Offset="0.9"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderBrush" Value="#FF003C74"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Height="Auto">
                                <TextBlock x:Name="textBlock" Text="{TemplateBinding Content}" TextWrapping="Wrap" d:LayoutOverrides="Width, Height"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="TextDecorations" TargetName="textBlock" Value="Underline"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="true"/>
                                <Trigger Property="ToggleButton.IsChecked" Value="true"/>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="Button_RectangleDropShadow" TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle">
                    <Setter.Value>
                        <Style>
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Rectangle Stroke="Black" StrokeDashArray="1 2" StrokeThickness="1" Margin="3" SnapsToDevicePixels="true"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFFFFFFF" Offset="0"/>
                            <GradientStop Color="#FFF0F0EA" Offset="0.9"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderBrush" Value="#FF003C74"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="5">
                                <Border.Effect>
                                    <DropShadowEffect ShadowDepth="1" BlurRadius="3"/>
                                </Border.Effect>
                                <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Opacity" TargetName="contentPresenter" Value="0.7"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Effect" TargetName="border">
                                        <Setter.Value>
                                            <DropShadowEffect ShadowDepth="0" BlurRadius="3"/>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Margin" TargetName="border" Value="1,1,-1,-1"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="true"/>
                                <Trigger Property="ToggleButton.IsChecked" Value="true"/>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="Button_Star" TargetType="{x:Type Button}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border HorizontalAlignment="Stretch" Width="Auto" Height="Auto">
                                <Path Stretch="Fill" StrokeLineJoin="Round" Stroke="{TemplateBinding BorderBrush}" Fill="{TemplateBinding Foreground}" Data="F1 M 159.866,29.8464L 157.874,35.4818L 151.899,35.6346L 156.643,39.2702L 154.942,45L 159.866,41.6115L 164.789,45L 163.088,39.2702L 167.832,35.6346L 161.857,35.4818L 159.866,29.8464 Z "/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsKeyboardFocused" Value="true"/>
                                <Trigger Property="ToggleButton.IsChecked" Value="true"/>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="Button_WindowControl" TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle">
                    <Setter.Value>
                        <Style>
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Rectangle Stroke="Black" StrokeDashArray="1 2" StrokeThickness="1" Margin="3" SnapsToDevicePixels="true"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFFFFFFF" Offset="0"/>
                            <GradientStop Color="#FFF0F0EA" Offset="0.9"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderBrush" Value="#FF003C74"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border" Width="20" Height="20" CornerRadius="3">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFFDFDFD" Offset="0"/>
                                        <GradientStop Color="#FFA4A4A4" Offset="1"/>
                                        <GradientStop Color="#FFDBDBDB" Offset="0.499"/>
                                        <GradientStop Color="#FFCDCDCD" Offset="0.501"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Border.Effect>
                                    <DropShadowEffect Direction="270" ShadowDepth="1"/>
                                </Border.Effect>
                                <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Opacity" TargetName="contentPresenter" Value="0.6"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Effect" TargetName="border">
                                        <Setter.Value>
                                            <DropShadowEffect BlurRadius="3" Direction="270" ShadowDepth="0"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Opacity" TargetName="contentPresenter" Value="0.4"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="Button_WindowControl_Red" TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle">
                    <Setter.Value>
                        <Style>
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Rectangle Stroke="Black" StrokeDashArray="1 2" StrokeThickness="1" Margin="3" SnapsToDevicePixels="true"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFFFFFFF" Offset="0"/>
                            <GradientStop Color="#FFF0F0EA" Offset="0.9"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderBrush" Value="#FF003C74"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border" Width="20" Height="20" CornerRadius="3" Background="{DynamicResource Brush_GlossyRed}">
                                <Border.Effect>
                                    <DropShadowEffect Direction="270" ShadowDepth="1"/>
                                </Border.Effect>
                                <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Opacity" TargetName="contentPresenter" Value="0.6"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Effect" TargetName="border">
                                        <Setter.Value>
                                            <DropShadowEffect BlurRadius="3" Direction="270" ShadowDepth="0"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Opacity" TargetName="contentPresenter" Value="0.4"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <FontFamily x:Key="Font_Base">/Fonts/#Helvetica Neue LT Std</FontFamily>
            <Style x:Key="CheckBox" TargetType="{x:Type CheckBox}">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush>
                            <GradientStop Color="#FFD2D4D2" Offset="0"/>
                            <GradientStop Color="#FFFFFFFF" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderBrush">
                    <Setter.Value>
                        <LinearGradientBrush>
                            <GradientStop Color="#FF004C94" Offset="0"/>
                            <GradientStop Color="#FF003C74" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="FocusVisualStyle">
                    <Setter.Value>
                        <Style>
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Rectangle Stroke="Black" StrokeDashArray="1 2" StrokeThickness="1" Margin="1" SnapsToDevicePixels="true"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">
                            <Grid Width="Auto" Height="Auto" Background="#00000000">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid Width="15" Height="15">
                                    <Rectangle x:Name="bgNormal" Stroke="#FF4C4C4C">
                                        <Rectangle.Fill>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="#FFFDFDFD" Offset="0"/>
                                                <GradientStop Color="#FFCFCFCF" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                    <Rectangle x:Name="bgChecked" Stroke="#FF4C4C4C" Visibility="Collapsed">
                                        <Rectangle.Fill>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="#66000000" Offset="1"/>
                                                <GradientStop Color="Black"/>
                                            </LinearGradientBrush>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                    <Path x:Name="tick" Fill="White" Stretch="Fill" Margin="1.042,0.958,1,1.029" Data="M-0.1546523,4.2925864 L-0.1546523,7.7877822 4.2328848,13.612498 5.7882829,13.600643 11.693425,5.0903385 11.655327,1.7468847 10.321941,1.7848785 4.6836348,9.23145 z" Visibility="Collapsed"/>
                                </Grid>
                                <TextBlock VerticalAlignment="Center" Text="{TemplateBinding Content}" TextWrapping="Wrap" Grid.Column="1" HorizontalAlignment="Left" Margin="5,2,0,0" Opacity="1" FontFamily="{DynamicResource Font_Base}" FontSize="12" FontWeight="Normal" Foreground="{DynamicResource Brush_TextDarkGrey}" d:LayoutOverrides="HorizontalAlignment"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                        <Condition Property="IsChecked" Value="False"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Visibility" TargetName="bgChecked" Value="Visible"/>
                                </MultiTrigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Visibility" TargetName="tick" Value="Visible"/>
                                    <Setter Property="Visibility" TargetName="bgChecked" Value="Visible"/>
                                </Trigger>
                                <Trigger Property="HasContent" Value="true">
                                    <Setter Property="FocusVisualStyle">
                                        <Setter.Value>
                                            <Style>
                                                <Setter Property="Control.Template">
                                                    <Setter.Value>
                                                        <ControlTemplate>
                                                            <Rectangle Stroke="Black" StrokeDashArray="1 2" StrokeThickness="1" Margin="14,0,0,0" SnapsToDevicePixels="true"/>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Padding" Value="2,0,0,0"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ComboBox" TargetType="{x:Type ComboBox}">
                <Setter Property="FocusVisualStyle">
                    <Setter.Value>
                        <Style>
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Rectangle Margin="4,4,21,4" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
                <Setter Property="Background" Value="{DynamicResource Brush_TextDarkGrey}"/>
                <Setter Property="BorderBrush" Value="#FF7F9DB9"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="FontFamily" Value="{DynamicResource Font_Base}"/>
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBox}">
                            <Grid SnapsToDevicePixels="true" >

                                <!--<VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Unfocused"/>
                                    <VisualState x:Name="Focused"/>
                                    <VisualState x:Name="FocusedDropDown"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>-->
                                <Border x:Name="Bd" Background="White" CornerRadius="5" BorderBrush="{DynamicResource Brush_BorderDarkerGrey}" BorderThickness="1">
                                    <Grid Grid.IsSharedSizeScope="true">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="1"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition SharedSizeGroup="ComboBoxButton" Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Border x:Name="Bd_Copy" CornerRadius="4" BorderBrush="{DynamicResource Brush_BorderGrey}" BorderThickness="1" Grid.Column="1" Grid.ColumnSpan="2" Margin="-1,0,0,0"/>
                                        <Border x:Name="SelectedItemBorder" Grid.ColumnSpan="2" Margin="{TemplateBinding Padding}"/>
                                        <ContentPresenter ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" Grid.Column="1" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="5,0" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                        <ToggleButton Grid.ColumnSpan="3" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                            <ToggleButton.Style>
                                                <Style TargetType="{x:Type ToggleButton}">
                                                    <Setter Property="MinWidth" Value="0"/>
                                                    <Setter Property="MinHeight" Value="0"/>
                                                    <Setter Property="Width" Value="Auto"/>
                                                    <Setter Property="Height" Value="Auto"/>
                                                    <Setter Property="Background" Value="Transparent"/>
                                                    <Setter Property="Focusable" Value="false"/>
                                                    <Setter Property="ClickMode" Value="Press"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                <Grid SnapsToDevicePixels="true">
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition Width="*"/>
                                                                        <ColumnDefinition SharedSizeGroup="ComboBoxButton" Width="Auto"/>
                                                                    </Grid.ColumnDefinitions>
                                                                    <Grid.Background>
                                                                        <SolidColorBrush/>
                                                                    </Grid.Background>
                                                                    <Border Grid.Column="1" Width="22" CornerRadius="0,4,4,0" Background="{DynamicResource Brush_ButtonBgLightGrey}" BorderBrush="{DynamicResource Brush_BorderDarkerGrey}" BorderThickness="1">
                                                                        <Border.Effect>
                                                                            <DropShadowEffect ShadowDepth="0" BlurRadius="2"/>
                                                                        </Border.Effect>

                                                                        <Path x:Name="path" Stretch="Fill" StrokeLineJoin="Round" Data="F1 M 75.5,131.038L 121.432,51.4811L 29.568,51.4811L 75.5,131.038 Z " Width="9" Height="6" Fill="{DynamicResource Brush_TextDarkGrey}" HorizontalAlignment="Center" VerticalAlignment="Center"/>

                                                                    </Border>
                                                                </Grid>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter Property="Opacity" TargetName="path" Value="0.7"/>
                                                                    </Trigger>
                                                                    <Trigger Property="IsPressed" Value="True">
                                                                        <Setter Property="Opacity" TargetName="path" Value="0.7"/>
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </ToggleButton.Style>
                                        </ToggleButton>
                                    </Grid>
                                </Border>
                                <Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="false" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom" VerticalOffset="0">
                                    <Microsoft_Windows_Themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}" Margin="0">
                                        <Border x:Name="DropDownBorder" BorderThickness="1" CornerRadius="5" Background="White" Padding="5" d:LayoutOverrides="Width, Height" BorderBrush="{DynamicResource Brush_BorderDarkerGrey}">
                                            <ScrollViewer x:Name="DropDownScrollViewer">
                                                <Grid>
                                                    <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                        <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}" Visibility="Collapsed"/>
                                                    </Canvas>
                                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                </Grid>
                                            </ScrollViewer>
                                        </Border>
                                    </Microsoft_Windows_Themes:SystemDropShadowChrome>
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsDropDownOpen" Value="True">
                                    <Setter Property="VerticalOffset" TargetName="PART_Popup" Value="1"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelectionBoxHighlighted" Value="true"/>
                                        <Condition Property="IsDropDownOpen" Value="false"/>
                                    </MultiTrigger.Conditions>
                                </MultiTrigger>
                                <Trigger Property="IsSelectionBoxHighlighted" Value="true"/>
                                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                                    <Setter Property="Margin" TargetName="Shdw" Value="0,0,1,1"/>
                                    <Setter Property="Color" TargetName="Shdw" Value="#31000000"/>
                                </Trigger>
                                <Trigger Property="HasItems" Value="false">
                                    <Setter Property="MinHeight" TargetName="DropDownBorder" Value="95"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                    <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                </Trigger>
                                <Trigger Property="IsGrouping" Value="true">
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                                </Trigger>
                                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                                    <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                                    <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsEditable" Value="true">
                        <Setter Property="IsTabStop" Value="false"/>
                        <Setter Property="Padding" Value="0,1"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ComboBox}">
                                    <Grid SnapsToDevicePixels="true">
                                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="1">
                                            <Grid Grid.IsSharedSizeScope="true">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="1"/>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition SharedSizeGroup="ComboBoxButton" Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBox x:Name="PART_EditableTextBox" Grid.Column="1" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                                                    <TextBox.Style>
                                                        <Style TargetType="{x:Type TextBox}">
                                                            <Setter Property="OverridesDefaultStyle" Value="true"/>
                                                            <Setter Property="AllowDrop" Value="true"/>
                                                            <Setter Property="MinWidth" Value="0"/>
                                                            <Setter Property="MinHeight" Value="0"/>
                                                            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                                            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type TextBox}">
                                                                        <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </TextBox.Style>
                                                </TextBox>
                                                <ToggleButton Background="{x:Null}" Grid.ColumnSpan="3" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                                    <ToggleButton.Style>
                                                        <Style TargetType="{x:Type ToggleButton}">
                                                            <Setter Property="MinWidth" Value="0"/>
                                                            <Setter Property="MinHeight" Value="0"/>
                                                            <Setter Property="Width" Value="Auto"/>
                                                            <Setter Property="Height" Value="Auto"/>
                                                            <Setter Property="Background" Value="Transparent"/>
                                                            <Setter Property="Focusable" Value="false"/>
                                                            <Setter Property="ClickMode" Value="Press"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                        <Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                                                            <Grid.ColumnDefinitions>
                                                                                <ColumnDefinition Width="*"/>
                                                                                <ColumnDefinition SharedSizeGroup="ComboBoxButton" Width="Auto"/>
                                                                            </Grid.ColumnDefinitions>
                                                                            <Microsoft_Windows_Themes:ScrollChrome x:Name="Chrome" Grid.Column="1" HasOuterBorder="false" Padding="1,0,0,0" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsChecked}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="DownArrow" ThemeColor="NormalColor" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
                                                                        </Grid>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </ToggleButton.Style>
                                                </ToggleButton>
                                            </Grid>
                                        </Border>
                                        <Popup x:Name="PART_Popup" AllowsTransparency="true" Focusable="false" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                            <Microsoft_Windows_Themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}">
                                                <Border x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                                                    <ScrollViewer x:Name="DropDownScrollViewer">
                                                        <Grid>
                                                            <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                                <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                                            </Canvas>
                                                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                        </Grid>
                                                    </ScrollViewer>
                                                </Border>
                                            </Microsoft_Windows_Themes:SystemDropShadowChrome>
                                        </Popup>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="HasItems" Value="false">
                                            <Setter Property="MinHeight" TargetName="DropDownBorder" Value="95"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                        </Trigger>
                                        <Trigger Property="IsGrouping" Value="true">
                                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                                        </Trigger>
                                        <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                                            <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
                                            <Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
                                        </Trigger>
                                        <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                                            <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                                            <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="ComboBoxItem" TargetType="{x:Type ComboBoxItem}">
                <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="Padding" Value="3,0,3,0"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                            <Border x:Name="Bd" SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" MinHeight="20">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsHighlighted" Value="true">
                                    <Setter Property="Background" Value="{DynamicResource ResourceKey=Brush_HighlightItem}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="DataGrid" TargetType="{x:Type Custom:DataGrid}">
                <Setter Property="Background" Value="White"/>
                <Setter Property="Foreground" Value="{DynamicResource Brush_TextDarkGrey}"/>
                <Setter Property="BorderBrush" Value="{x:Null}"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
                <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
                <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource Brush_BorderGrey}"/>
                <Setter Property="VerticalGridLinesBrush" Value="{DynamicResource Brush_BorderGrey}"/>
                <Setter Property="FontFamily" Value="{DynamicResource Font_Base}"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="AutoGenerateColumns" Value="False"/>
                <Setter Property="HeadersVisibility" Value="None"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Custom:DataGrid}">
                            <Border SnapsToDevicePixels="True" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                                <ScrollViewer x:Name="DG_ScrollViewer" Focusable="False">
                                    <ScrollViewer.Template>
                                        <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="Auto"/>
                                                </Grid.RowDefinitions>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <Button Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Custom:DataGrid}}}" Focusable="False">
                                                    <Button.Visibility>
                                                        <Binding Path="HeadersVisibility" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Custom:DataGrid}}">
                                                            <Binding.ConverterParameter>
                                                                <Custom:DataGridHeadersVisibility>All</Custom:DataGridHeadersVisibility>
                                                            </Binding.ConverterParameter>
                                                        </Binding>
                                                    </Button.Visibility>
                                                    <Button.Template>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Grid>
                                                                <Rectangle x:Name="Border" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" SnapsToDevicePixels="True"/>
                                                                <Polygon x:Name="Arrow" Fill="Black" Stretch="Uniform" HorizontalAlignment="Right" Margin="8,8,3,3" VerticalAlignment="Bottom" Opacity="0.15" Points="0,10 10,10 10,0"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter Property="Stroke" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Fill" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Visibility" TargetName="Arrow" Value="Collapsed"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Button.Template>
                                                    <Button.Command>
                                                        <RoutedCommand/>
                                                    </Button.Command>
                                                </Button>
                                                <Custom:DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1" Grid.ColumnSpan="2">
                                                    <Custom:DataGridColumnHeadersPresenter.Visibility>
                                                        <Binding Path="HeadersVisibility" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Custom:DataGrid}}">
                                                            <Binding.ConverterParameter>
                                                                <Custom:DataGridHeadersVisibility>Column</Custom:DataGridHeadersVisibility>
                                                            </Binding.ConverterParameter>
                                                        </Binding>
                                                    </Custom:DataGridColumnHeadersPresenter.Visibility>
                                                </Custom:DataGridColumnHeadersPresenter>
                                                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" Grid.ColumnSpan="2" Grid.Row="1" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False"/>
                                                <ScrollBar x:Name="PART_VerticalScrollBar" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Grid.Column="2" Grid.Row="1" Maximum="{TemplateBinding ScrollableHeight}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Orientation="Vertical" ViewportSize="{TemplateBinding ViewportHeight}"/>
                                                <Grid Grid.Column="1" Grid.Row="2">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Custom:DataGrid}}}"/>
                                                        <ColumnDefinition Width="*"/>
                                                    </Grid.ColumnDefinitions>
                                                    <ScrollBar x:Name="PART_HorizontalScrollBar" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Orientation="Horizontal" ViewportSize="{TemplateBinding ViewportWidth}"/>
                                                </Grid>
                                            </Grid>
                                        </ControlTemplate>
                                    </ScrollViewer.Template>
                                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </ScrollViewer>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsGrouping" Value="True">
                        <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="DataGridCell" TargetType="{x:Type Custom:DataGridCell}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Custom:DataGridCell}">
                            <Border SnapsToDevicePixels="True" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Padding="5">
                                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Foreground" Value="{DynamicResource Brush_TextDarkGrey}"/>
                        <Setter Property="Background" Value="{DynamicResource Brush_HighlightItem}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="DataGridCell_ShowRowSelection" TargetType="{x:Type Custom:DataGridCell}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Custom:DataGridCell}">
                            <ControlTemplate.Resources>
                                <Storyboard x:Key="SB_Selected">
                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="180"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="SB_Unselected">
                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </ControlTemplate.Resources>
                            <Grid Height="Auto" Background="{TemplateBinding Background}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <Border HorizontalAlignment="Center" VerticalAlignment="Center" Width="18" Height="18" Background="{DynamicResource Brush_GlossyLightGrey}" BorderBrush="{DynamicResource Brush_BorderDarkerGrey}" BorderThickness="1" CornerRadius="3" Margin="10,0">
                                    <Border.Effect>
                                        <DropShadowEffect BlurRadius="3" ShadowDepth="2"/>
                                    </Border.Effect>
                                    <Path x:Name="path" Stretch="Fill" StrokeLineJoin="Round" Data="F1 M 75.5,131.038L 121.432,51.4811L 29.568,51.4811L 75.5,131.038 Z " Width="9" Height="6" Fill="{DynamicResource Brush_TextRed}" HorizontalAlignment="Center" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
                                        <Path.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform/>
                                                <SkewTransform/>
                                                <RotateTransform/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </Path.RenderTransform>
                                    </Path>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard x:Name="SB_Selected_BeginStoryboard" Storyboard="{StaticResource SB_Selected}"/>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <StopStoryboard BeginStoryboardName="SB_Selected_BeginStoryboard"/>
                                        <BeginStoryboard x:Name="SB_Unselected_BeginStoryboard" Storyboard="{StaticResource SB_Unselected}"/>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="{DynamicResource Brush_HighlightItem}"/>
                        <Setter Property="Foreground" Value="Black"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="DataGridColumnHeader" TargetType="{x:Type Custom:DataGridColumnHeader}">
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="SeparatorBrush" Value="{DynamicResource Brush_BorderGrey}"/>
                <Setter Property="Padding" Value="8,5,5,5"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Custom:DataGridColumnHeader}">
                            <Grid>
                                <Border Background="{DynamicResource Brush_DataGridHeaderBackground}" Padding="{TemplateBinding Padding}" Grid.ColumnSpan="1">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" Width="Auto" Height="Auto"/>
                                        <Path x:Name="sortDirectionArrow" Fill="{DynamicResource Brush_DarkGrey}" Stretch="Fill" Margin="5,0,0,0" VerticalAlignment="Stretch" Width="8" Height="5" RenderTransformOrigin="0.5,0.5" Visibility="Collapsed" Grid.Column="1" Data="M130,11 L148.00033,11 139.0005,23 z">
                                            <Path.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform/>
                                                    <SkewTransform/>
                                                    <RotateTransform/>
                                                    <TranslateTransform/>
                                                </TransformGroup>
                                            </Path.RenderTransform>
                                        </Path>
                                    </Grid>
                                </Border>
                                <Path x:Name="mouseOverHighlight" Stretch="Fill" Stroke="{DynamicResource Brush_Grey}" StrokeThickness="2" VerticalAlignment="Bottom" Height="2" Data="M5.4966667,28.138333 L89,28.138333" Visibility="Collapsed"/>
                                <Custom:DataGridHeaderBorder IsClickable="{TemplateBinding CanUserSort}" IsHovered="{TemplateBinding IsMouseOver}" IsPressed="{TemplateBinding IsPressed}" SeparatorBrush="{TemplateBinding SeparatorBrush}" SeparatorVisibility="{TemplateBinding SeparatorVisibility}" SortDirection="{TemplateBinding SortDirection}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Visibility="Collapsed"/>
                                <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left">
                                    <Thumb.Style>
                                        <Style TargetType="{x:Type Thumb}">
                                            <Setter Property="Width" Value="8"/>
                                            <Setter Property="Background" Value="Transparent"/>
                                            <Setter Property="Cursor" Value="SizeWE"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                                        <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Thumb.Style>
                                </Thumb>
                                <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right">
                                    <Thumb.Style>
                                        <Style TargetType="{x:Type Thumb}">
                                            <Setter Property="Width" Value="8"/>
                                            <Setter Property="Background" Value="Transparent"/>
                                            <Setter Property="Cursor" Value="SizeWE"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                                        <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Thumb.Style>
                                </Thumb>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Visibility" TargetName="mouseOverHighlight" Value="Visible"/>
                                </Trigger>
                                <Trigger Property="SortDirection" Value="Ascending">
                                    <Setter Property="Visibility" TargetName="sortDirectionArrow" Value="Visible"/>
                                    <Setter Property="RenderTransform" TargetName="sortDirectionArrow">
                                        <Setter.Value>
                                            <TransformGroup>
                                                <ScaleTransform/>
                                                <SkewTransform/>
                                                <RotateTransform Angle="180"/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="SortDirection" Value="Descending">
                                    <Setter Property="Visibility" TargetName="sortDirectionArrow" Value="Visible"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="GeneralText" TargetType="{x:Type TextBlock}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="FontFamily" Value="{DynamicResource Font_Base}"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="FontSize" Value="12"/>
            </Style>
            <Style x:Key="MenuItem_HeaderToolBarItem" TargetType="{x:Type MenuItem}">
                <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="FontFamily" Value="{DynamicResource Font_Base}"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="IsCheckable" Value="True"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type MenuItem}">
                            <ControlTemplate.Resources>
                                <Storyboard x:Key="SB_Focused">
                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="bgFocused" Storyboard.TargetProperty="(UIElement.Opacity)" Duration="00:00:00.0010000">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="SB_LostFocus">
                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="bgFocused" Duration="00:00:00.0010000" Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </ControlTemplate.Resources>
                            <Grid Height="Auto" Background="#00000000">
                                <Border x:Name="bgFocused" HorizontalAlignment="Stretch" Width="Auto" Grid.RowSpan="1" BorderBrush="Black" BorderThickness="1" Background="Transparent" CornerRadius="5" Opacity="0"/>
                                <Border x:Name="bgHighlighted" HorizontalAlignment="Stretch" Width="Auto" Grid.RowSpan="1" Background="Transparent" Visibility="Collapsed" CornerRadius="5"/>
                                <Border x:Name="bgExtended" HorizontalAlignment="Stretch" Width="Auto" Grid.RowSpan="1" Background="Transparent" Visibility="Collapsed" Height="10" VerticalAlignment="Bottom" Margin="0,0,0,-10"/>
                                <Grid HorizontalAlignment="Stretch" Margin="15,0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="0.5*"/>
                                        <RowDefinition Height="0.5*"/>
                                    </Grid.RowDefinitions>
                                    <ContentPresenter x:Name="Icon" HorizontalAlignment="Center" VerticalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ContentSource="Icon"/>
                                    <ContentPresenter x:Name="contentPresenter" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ContentSource="Header" RecognizesAccessKey="True" Grid.Column="0" Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,3">
                                        <ContentPresenter.Effect>
                                            <DropShadowEffect ShadowDepth="2" BlurRadius="3" Opacity="0.5"/>
                                        </ContentPresenter.Effect>
                                    </ContentPresenter>
                                </Grid>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <EventTrigger RoutedEvent="Keyboard.GotKeyboardFocus">
                                    <!--                                <StopStoryboard BeginStoryboardName="SB_Focused_BeginStoryboard"/>-->
                                    <BeginStoryboard x:Name="SB_Focused_BeginStoryboard" Storyboard="{StaticResource SB_Focused}"/>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="Keyboard.LostKeyboardFocus">
                                    <BeginStoryboard x:Name="SB_LostFocus_BeginStoryboard" Storyboard="{StaticResource SB_LostFocus}"/>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="Mouse.MouseLeave">
                                    <BeginStoryboard x:Name="SB_LostFocus_BeginStoryboard1" Storyboard="{StaticResource SB_LostFocus}"/>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="Mouse.MouseEnter">
                                    <BeginStoryboard x:Name="SB_Focused_BeginStoryboard1" Storyboard="{StaticResource SB_Focused}"/>
                                </EventTrigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Visibility" TargetName="bgHighlighted" Value="Visible"/>
                                    <Setter Property="Foreground" Value="{DynamicResource Brush_DarkGrey}"/>
                                    <Setter Property="Effect" TargetName="contentPresenter">
                                        <Setter.Value>
                                            <DropShadowEffect BlurRadius="3" Opacity="0.1" ShadowDepth="0"/>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="CornerRadius" TargetName="bgHighlighted" Value="5,5,0,0"/>
                                </Trigger>
                                <Trigger Property="Icon" Value="{x:Null}">
                                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Visibility" TargetName="bgHighlighted" Value="Visible"/>
                                    <Setter Property="Foreground" Value="{DynamicResource Brush_DarkGrey}"/>
                                    <Setter Property="Effect" TargetName="contentPresenter">
                                        <Setter.Value>
                                            <DropShadowEffect BlurRadius="3" Opacity="0.1" ShadowDepth="0"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="RadioButton" TargetType="{x:Type RadioButton}">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush>
                            <GradientStop Color="#FFD2D4D2" Offset="0"/>
                            <GradientStop Color="#FFFFFFFF" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderBrush">
                    <Setter.Value>
                        <LinearGradientBrush>
                            <GradientStop Color="#FF004C94" Offset="0"/>
                            <GradientStop Color="#FF003C74" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RadioButton}">
                            <ControlTemplate.Resources>
                                <Storyboard x:Key="sbMouseOver">
                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="bgNormal" Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="bgChecked" Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="sbMouseOut">
                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="bgNormal" Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="bgChecked" Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </ControlTemplate.Resources>
                            <Grid Width="Auto" Height="Auto" Background="#00000000">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid Width="20" Height="20">
                                    <Ellipse x:Name="bgNormal" Stroke="#FF4C4C4C" HorizontalAlignment="Center" Width="20" Height="20" d:LayoutOverrides="Width, VerticalMargin" VerticalAlignment="Center">
                                        <Ellipse.Fill>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="#FFFDFDFD" Offset="0"/>
                                                <GradientStop Color="#FFCFCFCF" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Ellipse.Fill>
                                    </Ellipse>
                                    <Ellipse x:Name="bgChecked" Stroke="{x:Null}" HorizontalAlignment="Center" VerticalAlignment="Center" Width="20" Height="20" d:LayoutOverrides="Width, VerticalMargin" StrokeThickness="1" Opacity="0">
                                        <Ellipse.Fill>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="#00FDFDFD" Offset="0.05"/>
                                                <GradientStop Color="#7FCFCFCF" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Ellipse.Fill>
                                    </Ellipse>
                                    <Ellipse x:Name="tick" HorizontalAlignment="Center" Width="12" Height="12" d:LayoutOverrides="VerticalMargin" VerticalAlignment="Center" StrokeThickness="3" Visibility="Hidden">
                                        <Ellipse.Stroke>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="#00000000" Offset="0"/>
                                                <GradientStop Color="#4B000000" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Ellipse.Stroke>
                                        <Ellipse.Fill>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="#FFFDFDFD" Offset="0"/>
                                                <GradientStop Color="#FFCFCFCF" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Ellipse.Fill>
                                    </Ellipse>
                                </Grid>
                                <TextBlock VerticalAlignment="Center" Text="{TemplateBinding Content}" TextWrapping="Wrap" d:LayoutOverrides="Width" Grid.Column="1" HorizontalAlignment="Left" Margin="5,2,0,0" Opacity="1" FontFamily="{DynamicResource Font_Base}" FontSize="12" FontWeight="Bold" Foreground="{DynamicResource Brush_Grey}"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.ExitActions>
                                        <BeginStoryboard x:Name="sbMouseOut_BeginStoryboard" Storyboard="{StaticResource sbMouseOut}"/>
                                        <StopStoryboard BeginStoryboardName="sbMouseOver_BeginStoryboard"/>
                                    </Trigger.ExitActions>
                                    <Trigger.EnterActions>
                                        <BeginStoryboard x:Name="sbMouseOver_BeginStoryboard" Storyboard="{StaticResource sbMouseOver}"/>
                                        <StopStoryboard BeginStoryboardName="sbMouseOut_BeginStoryboard"/>
                                    </Trigger.EnterActions>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Trigger.ExitActions>
                                        <BeginStoryboard x:Name="sbMouseOut_BeginStoryboard1" Storyboard="{StaticResource sbMouseOut}"/>
                                    </Trigger.ExitActions>
                                    <Trigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource sbMouseOver}"/>
                                    </Trigger.EnterActions>
                                    <Setter Property="Visibility" TargetName="tick" Value="Visible"/>
                                </Trigger>
                                <Trigger Property="HasContent" Value="true">
                                    <Setter Property="FocusVisualStyle">
                                        <Setter.Value>
                                            <Style>
                                                <Setter Property="Control.Template">
                                                    <Setter.Value>
                                                        <ControlTemplate>
                                                            <Rectangle Stroke="Black" StrokeDashArray="1 2" StrokeThickness="1" Margin="14,0,0,0" SnapsToDevicePixels="true"/>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Padding" Value="2,0,0,0"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="RadioButton_Small" TargetType="{x:Type RadioButton}">
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RadioButton}">
                            <Grid Width="Auto" Height="Auto" Background="#00000000">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid Width="15" Height="15">
                                    <Ellipse x:Name="bgNormal" Stroke="#FF4C4C4C" HorizontalAlignment="Stretch" Width="Auto" Height="Auto" d:LayoutOverrides="VerticalMargin" VerticalAlignment="Stretch">
                                        <Ellipse.Fill>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="#FFFDFDFD" Offset="0"/>
                                                <GradientStop Color="#FFCFCFCF" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Ellipse.Fill>
                                    </Ellipse>
                                    <Ellipse x:Name="bgChecked" Stroke="#FF4C4C4C" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" d:LayoutOverrides="VerticalMargin" StrokeThickness="1" Visibility="Collapsed">
                                        <Ellipse.Fill>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="#66000000" Offset="1"/>
                                                <GradientStop Color="Black"/>
                                            </LinearGradientBrush>
                                        </Ellipse.Fill>
                                    </Ellipse>
                                    <Ellipse x:Name="tick" HorizontalAlignment="Stretch" Width="Auto" Height="Auto" VerticalAlignment="Stretch" StrokeThickness="2" Visibility="Hidden" Margin="3">
                                        <Ellipse.Stroke>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="#00000000" Offset="0"/>
                                                <GradientStop Color="#4B000000" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Ellipse.Stroke>
                                        <Ellipse.Fill>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="#FFFDFDFD" Offset="0"/>
                                                <GradientStop Color="#FFCFCFCF" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Ellipse.Fill>
                                    </Ellipse>
                                </Grid>
                                <TextBlock VerticalAlignment="Center" Text="{TemplateBinding Content}" TextWrapping="Wrap" d:LayoutOverrides="Width" Grid.Column="1" HorizontalAlignment="Left" Margin="5,2,0,0" Opacity="1" FontFamily="{DynamicResource Font_Base}" FontSize="12" FontWeight="Normal" Foreground="{DynamicResource Brush_TextDarkGrey}"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Visibility" TargetName="bgChecked" Value="Visible"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Visibility" TargetName="tick" Value="Visible"/>
                                    <Setter Property="Visibility" TargetName="bgChecked" Value="Visible"/>
                                </Trigger>
                                <Trigger Property="HasContent" Value="true">
                                    <Setter Property="FocusVisualStyle">
                                        <Setter.Value>
                                            <Style>
                                                <Setter Property="Control.Template">
                                                    <Setter.Value>
                                                        <ControlTemplate>
                                                            <Rectangle Stroke="Black" StrokeDashArray="1 2" StrokeThickness="1" Margin="14,0,0,0" SnapsToDevicePixels="true"/>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Padding" Value="2,0,0,0"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="Separator_HeaderToolBar" TargetType="{x:Type Separator}">
                <Setter Property="Background" Value="#FFC5C2B8"/>
                <Setter Property="MinWidth" Value="1"/>
                <Setter Property="MinHeight" Value="1"/>
                <Setter Property="Margin" Value="2"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Separator}">
                            <Grid Width="2" Height="Auto" SnapsToDevicePixels="True" HorizontalAlignment="Left" Opacity="0.3">
                                <Path Fill="White" Stretch="Fill" Stroke="Black" HorizontalAlignment="Left" Width="1" Data="M1.375,0 L1.375,14.440611" StrokeStartLineCap="Square" StrokeEndLineCap="Square"/>
                                <Path Stretch="Fill" Stroke="#FFCAC9C9" HorizontalAlignment="Right" Width="1" Data="M1.375,0 L1.375,14.440611" StrokeStartLineCap="Square" StrokeEndLineCap="Square"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="Separator_LightHor" TargetType="{x:Type Separator}">
                <Setter Property="Background" Value="#FFC5C2B8"/>
                <Setter Property="MinWidth" Value="1"/>
                <Setter Property="MinHeight" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Separator}">
                            <Grid Width="Auto" Height="2" SnapsToDevicePixels="True" HorizontalAlignment="Stretch" Opacity="1">
                                <Path Stretch="Fill" Stroke="#FFCCCCCC" StrokeEndLineCap="Square" StrokeStartLineCap="Square" VerticalAlignment="Top" Height="1" Data="M0,8 L195,8"/>
                                <Path Stretch="Fill" Stroke="White" StrokeEndLineCap="Square" StrokeStartLineCap="Square" VerticalAlignment="Bottom" Height="1" Data="M0,8 L195,8"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Margin" Value="0"/>
            </Style>
            <Style x:Key="TabControl_RightColumn" TargetType="{x:Type TabControl}">
                <Setter Property="Foreground" Value="{DynamicResource Brush_TextDarkGrey}"/>
                <Setter Property="Padding" Value="10"/>
                <Setter Property="BorderBrush" Value="{DynamicResource Brush_BorderGrey}"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Background" Value="White"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabControl}">
                            <Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="ColumnDefinition0"/>
                                    <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                                    <RowDefinition x:Name="RowDefinition1" Height="*"/>
                                </Grid.RowDefinitions>
                                <TabPanel x:Name="HeaderPanel" IsItemsHost="true" Panel.ZIndex="1" Grid.Column="0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Margin="3,2,2,0" HorizontalAlignment="Left"/>
                                <Grid x:Name="Shadow" Visibility="Visible" Grid.Row="1" Margin="0,-2,0,0">
                                    <Border BorderBrush="#0C000000" BorderThickness="1" CornerRadius="0" Background="#33000000" Visibility="Visible"/>
                                </Grid>
                                <Border x:Name="ContentPanel" Margin="2,0,2,2" BorderBrush="#D0CEBF" Grid.Column="0" Grid.Row="1" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                        <Border Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="{DynamicResource Brush_BorderGrey}">
                                            <ScrollViewer Margin="-1">
                                                <ContentPresenter x:Name="PART_SelectedContentHost" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ContentSource="SelectedContent" Width="Auto" Height="Auto" ScrollViewer.VerticalScrollBarVisibility="Auto"/>
                                            </ScrollViewer>
                                        </Border>
                                    </Border>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="TabStripPlacement" Value="Bottom">
                                    <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="1"/>
                                    <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                                    <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                    <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
                                    <Setter Property="Margin" TargetName="HeaderPanel" Value="2,0,2,2"/>
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <LinearGradientBrush EndPoint="0,0" StartPoint="0,1">
                                                <GradientStop Color="#FFFCFCFE" Offset="0"/>
                                                <GradientStop Color="#FFF4F3EE" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="TabStripPlacement" Value="Left">
                                    <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                                    <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                                    <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="0"/>
                                    <Setter Property="Grid.Column" TargetName="ContentPanel" Value="1"/>
                                    <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
                                    <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                                    <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                    <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                                    <Setter Property="Margin" TargetName="HeaderPanel" Value="2,2,-1,2"/>
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
                                                <GradientStop Color="#FFFCFCFE" Offset="0"/>
                                                <GradientStop Color="#FFF4F3EE" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="TabStripPlacement" Value="Right">
                                    <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                                    <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                                    <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="1"/>
                                    <Setter Property="Grid.Column" TargetName="ContentPanel" Value="0"/>
                                    <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
                                    <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
                                    <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                    <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                                    <Setter Property="Margin" TargetName="HeaderPanel" Value="-1,2,2,2"/>
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <LinearGradientBrush EndPoint="0,0" StartPoint="1,0">
                                                <GradientStop Color="#FFFCFCFE" Offset="0"/>
                                                <GradientStop Color="#FFF4F3EE" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="TabItem_RightColumn" TargetType="{x:Type TabItem}">
                <Setter Property="FocusVisualStyle">
                    <Setter.Value>
                        <Style>
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Rectangle Stroke="Black" StrokeDashArray="1 2" StrokeThickness="1" Margin="3,3,3,1" SnapsToDevicePixels="true"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="Padding" Value="12,2,12,2"/>
                <Setter Property="BorderThickness" Value="1,1,1,0"/>
                <Setter Property="BorderBrush" Value="{DynamicResource Brush_BorderGrey}"/>
                <Setter Property="Foreground" Value="{DynamicResource Brush_TextDarkGrey}"/>
                <Setter Property="Background" Value="{x:Null}"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                <Setter Property="FontFamily" Value="{DynamicResource Font_Base}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabItem}">
                            <Border x:Name="border" SnapsToDevicePixels="true" Height="30" Margin="-1,0">
                                <Grid Margin="0,0,1,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid x:Name="Shadow" Grid.ColumnSpan="2">
                                        <Border x:Name="selectedShadow" BorderBrush="#0C000000" BorderThickness="1,1,1,0" Margin="-2,-2,-2,1" CornerRadius="3,3,0,0" Background="#33000000" Visibility="Collapsed"/>
                                    </Grid>
                                    <Grid x:Name="Transform" Grid.ColumnSpan="2">
                                        <Border x:Name="bd" Background="{DynamicResource Brush_TabItemBg}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
                                        <Border x:Name="bdShadow" BorderBrush="#19000000" BorderThickness="0,1,0,0" Background="#4C000000" Visibility="Visible" VerticalAlignment="Bottom" Height="2"/>
                                        <Border x:Name="bdSelected" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Margin="0,0,0,-1" Visibility="Collapsed" Background="White"/>
                                    </Grid>
                                    <Border x:Name="border1" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                                        <TextBlock x:Name="textBlock" HorizontalAlignment="Center" VerticalAlignment="Center" TextWrapping="Wrap" Text="{TemplateBinding Header}" FontFamily="{DynamicResource Font_Base}" FontSize="14" FontWeight="Bold"/>
                                    </Border>

                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" SourceName="border" Value="True"/>
                                        <Condition Property="Selector.IsSelected" Value="False"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Opacity" TargetName="textBlock" Value="0.7"/>
                                </MultiTrigger>
                                <Trigger Property="Selector.IsSelected" Value="True">
                                    <Setter Property="Panel.ZIndex" Value="1"/>
                                    <Setter Property="Visibility" TargetName="bdSelected" Value="Visible"/>
                                    <Setter Property="Visibility" TargetName="Shadow" Value="Visible"/>
                                    <Setter Property="Visibility" TargetName="selectedShadow" Value="Visible"/>
                                    <Setter Property="Foreground" TargetName="textBlock" Value="Black"/>
                                </Trigger>
                                <Trigger Property="Selector.IsSelected" Value="False">
                                    <Setter Property="Foreground" TargetName="textBlock" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                    <Setter Property="FontWeight" TargetName="textBlock" Value="Normal"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                    <Setter Property="Background" TargetName="bd" Value="#FFF5F4EA"/>
                                    <Setter Property="BorderBrush" TargetName="bd" Value="#FFC9C7BA"/>
                                </Trigger>

                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="TextBox_MultipleLines" TargetType="{x:Type TextBox}">
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
                <Setter Property="BorderBrush" Value="#FF7F9DB9"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="Padding" Value="10"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="AllowDrop" Value="true"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Border x:Name="Bd" SnapsToDevicePixels="true" Background="White" BorderBrush="{DynamicResource Brush_BorderDarkerGrey}" BorderThickness="1" CornerRadius="5">
                                <Grid Height="Auto">
                                    <Border HorizontalAlignment="Stretch" Margin="0,0,1,1" Width="Auto" BorderBrush="{DynamicResource Brush_BorderGrey}" BorderThickness="1,1,0,0" CornerRadius="4"/>
                                    <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" d:LayoutOverrides="Width, Height"/>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="CalendarStyle" TargetType="Custom:Calendar">
                <Setter Property="IsTabStop" Value="False"/>
                <Setter Property="Background" >
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#F78F1E" Offset="0.0"/>
                            <GradientStop Color="#FFD3DEE8" Offset="0.16"/>
                            <GradientStop Color="#FFFCFCFD" Offset="0.16"/>
                            <GradientStop Color="#FFFFFFFF" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderBrush">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFA3AEB9" Offset="0"/>
                            <GradientStop Color="#FF8399A9" Offset="0.375"/>
                            <GradientStop Color="#FF718597" Offset="0.375"/>
                            <GradientStop Color="#FF617584" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderThickness" Value="1"/>
                <!--<Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Custom:Calendar">
                        <StackPanel HorizontalAlignment="Center" x:Name="Root">
                            <Custom:CalendarItem x:Name="CalendarItem" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>-->
            </Style>

            <Style x:Key="DatePicker" TargetType="{x:Type Custom:DatePicker}">
                <Setter Property="Foreground" Value="#FF333333" />
                <Setter Property="IsTodayHighlighted" Value="True" />
                <Setter Property="SelectedDateFormat" Value="Short" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Padding" Value="2"/>
                <Setter Property="BorderBrush">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint=".5,0" StartPoint=".5,1">
                            <GradientStop Color="#FFA3AEB9" Offset="0"/>
                            <GradientStop Color="#FF8399A9" Offset="0.375"/>
                            <GradientStop Color="#FF718597" Offset="0.375"/>
                            <GradientStop Color="#FF617584" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Custom:DatePicker}">
                            <Border BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}" 
                        Padding="{TemplateBinding Padding}">

                                <vsm:VisualStateManager.VisualStateGroups>
                                    <vsm:VisualStateGroup x:Name="CommonStates">
                                        <vsm:VisualState x:Name="Normal" />
                                        <vsm:VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="PART_DisabledVisual" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                                            </Storyboard>
                                        </vsm:VisualState>
                                    </vsm:VisualStateGroup>
                                </vsm:VisualStateManager.VisualStateGroups>
                                <Border.Child>
                                    <Grid x:Name="PART_Root"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                        <Grid.Resources>
                                            <!-- Main DatePicker Brushes -->
                                            <SolidColorBrush x:Key="DisabledBrush" Color="#A5FFFFFF" />

                                            <!-- Button Template -->
                                            <ControlTemplate x:Key="DropDownButtonTemplate" TargetType="Button">
                                                <Grid>
                                                    <vsm:VisualStateManager.VisualStateGroups>
                                                        <vsm:VisualStateGroup x:Name="CommonStates">
                                                            <vsm:VisualStateGroup.Transitions>
                                                                <vsm:VisualTransition GeneratedDuration="0" />
                                                                <vsm:VisualTransition To="MouseOver" GeneratedDuration="0:0:0.1" />
                                                                <vsm:VisualTransition To="Pressed" GeneratedDuration="0:0:0.1" />
                                                            </vsm:VisualStateGroup.Transitions>
                                                            <vsm:VisualState x:Name="Normal" />
                                                            <vsm:VisualState x:Name="MouseOver">
                                                                <Storyboard>
                                                                    <ColorAnimation Duration="0" Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#FF448DCA"/>
                                                                    <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)">
                                                                        <SplineColorKeyFrame KeyTime="0" Value="#7FFFFFFF"/>
                                                                    </ColorAnimationUsingKeyFrames>
                                                                    <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
                                                                        <SplineColorKeyFrame KeyTime="0" Value="#CCFFFFFF"/>
                                                                    </ColorAnimationUsingKeyFrames>
                                                                    <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                                        <SplineColorKeyFrame KeyTime="0" Value="#F2FFFFFF"/>
                                                                    </ColorAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </vsm:VisualState>
                                                            <vsm:VisualState x:Name="Pressed">
                                                                <Storyboard>
                                                                    <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                                                        <SplineColorKeyFrame KeyTime="0" Value="#FF448DCA"/>
                                                                    </ColorAnimationUsingKeyFrames>
                                                                    <DoubleAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetName="Highlight" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                                        <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                                                    </DoubleAnimationUsingKeyFrames>
                                                                    <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                                        <SplineColorKeyFrame KeyTime="0" Value="#EAFFFFFF"/>
                                                                    </ColorAnimationUsingKeyFrames>
                                                                    <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
                                                                        <SplineColorKeyFrame KeyTime="0" Value="#C6FFFFFF"/>
                                                                    </ColorAnimationUsingKeyFrames>
                                                                    <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)">
                                                                        <SplineColorKeyFrame KeyTime="0" Value="#6BFFFFFF"/>
                                                                    </ColorAnimationUsingKeyFrames>
                                                                    <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                                                        <SplineColorKeyFrame KeyTime="0" Value="#F4FFFFFF"/>
                                                                    </ColorAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </vsm:VisualState>
                                                            <vsm:VisualState x:Name="Disabled" />
                                                        </vsm:VisualStateGroup>
                                                    </vsm:VisualStateManager.VisualStateGroups>

                                                    <!--Start UI-->
                                                    <Grid Height="18" Width="19" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0" Background="#11FFFFFF" FlowDirection="LeftToRight">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="20*"/>
                                                            <ColumnDefinition Width="20*"/>
                                                            <ColumnDefinition Width="20*"/>
                                                            <ColumnDefinition Width="20*"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="23*"/>
                                                            <RowDefinition Height="19*"/>
                                                            <RowDefinition Height="19*"/>
                                                            <RowDefinition Height="19*"/>
                                                        </Grid.RowDefinitions>
                                                        <Border Margin="-1" Grid.ColumnSpan="4" Grid.Row="0" Grid.RowSpan="4" BorderThickness="1" BorderBrush="#FF45D6FA" Opacity="0" CornerRadius="0,0,1,1" x:Name="Highlight"/>
                                                        <Border x:Name="Background" Margin="0,-1,0,0" Grid.ColumnSpan="4" Grid.Row="1" Grid.RowSpan="3" BorderThickness="1" BorderBrush="#FFFFFFFF" Opacity="1" CornerRadius=".5" Background="#FF1F3B53"/>
                                                        <Border x:Name="BackgroundGradient" Margin="0,-1,0,0" Grid.ColumnSpan="4" Grid.Row="1" Grid.RowSpan="3" BorderThickness="1" BorderBrush="#BF000000" Opacity="1" CornerRadius=".5">
                                                            <Border.Background>
                                                                <LinearGradientBrush StartPoint=".7,0" EndPoint=".7,1">
                                                                    <GradientStop Color="#FFFFFFFF" Offset="0" />
                                                                    <GradientStop Color="#F9FFFFFF" Offset="0.375" />
                                                                    <GradientStop Color="#E5FFFFFF" Offset="0.625" />
                                                                    <GradientStop Color="#C6FFFFFF" Offset="1" />
                                                                </LinearGradientBrush>
                                                            </Border.Background>
                                                        </Border>
                                                        <Rectangle Grid.ColumnSpan="4" Grid.RowSpan="1" StrokeThickness="1">
                                                            <Rectangle.Stroke>
                                                                <LinearGradientBrush EndPoint="0.48,-1" StartPoint="0.48,1.25">
                                                                    <GradientStop Color="#FF494949"/>
                                                                    <GradientStop Color="#FF9F9F9F" Offset="1"/>
                                                                </LinearGradientBrush>
                                                            </Rectangle.Stroke>
                                                            <Rectangle.Fill>
                                                                <LinearGradientBrush EndPoint="0.3,-1.1" StartPoint="0.46,1.6">
                                                                    <GradientStop Color="#FF4084BD"/>
                                                                    <GradientStop Color="#FFAFCFEA" Offset="1"/>
                                                                </LinearGradientBrush>
                                                            </Rectangle.Fill>
                                                        </Rectangle>
                                                        <Canvas Grid.Column="0" Grid.ColumnSpan="4" Grid.Row="1" Grid.RowSpan="3">
                                                            <Line StrokeThickness="1" X1="5" X2="5"  Y1="0" Y2="13" Stroke="Black" RenderTransformOrigin="0.5,0.5" />
                                                            <Line StrokeThickness="1" X1="10" X2="10"  Y1="0" Y2="13" Stroke="Black" RenderTransformOrigin="0.5,0.5" />
                                                            <Line StrokeThickness="1" X1="15" X2="15"  Y1="0" Y2="13" Stroke="Black" RenderTransformOrigin="0.5,0.5" />
                                                            <Line StrokeThickness="1" X1="0" X2="18"  Y1="3" Y2="3" Stroke="Black" RenderTransformOrigin="0.5,0.5" />
                                                            <Line StrokeThickness="1" X1="0" X2="18"  Y1="8" Y2="8" Stroke="Black" RenderTransformOrigin="0.5,0.5" />
                                                        </Canvas>


                                                        <Ellipse HorizontalAlignment="Center" VerticalAlignment="Center" Fill="#FFFFFFFF" StrokeThickness="0" Grid.ColumnSpan="4" Width="3" Height="3"/>
                                                        <Border Grid.ColumnSpan="4" Grid.Row="0" Grid.RowSpan="4" BorderThickness="1" BorderBrush="#B2FFFFFF" Opacity="0" CornerRadius="0,0,.5,.5" x:Name="DisabledVisual"/>
                                                    </Grid>
                                                    <!--End UI-->
                                                </Grid>
                                            </ControlTemplate>
                                        </Grid.Resources>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Button x:Name="PART_Button" Grid.Row="0" Grid.Column="1"
                                    Template="{StaticResource DropDownButtonTemplate}"
                                    Foreground="{TemplateBinding Foreground}" 
                                    Width="20"
                                    Margin="3,0,3,0" 
                                    Focusable="False" 
                                    VerticalAlignment="Top"
                                    HorizontalAlignment="Left" />
                                        <!--<Custom:DatePickerTextBox x:Name="PART_TextBox" 
                                Grid.Row="0" Grid.Column="0" 
                                Foreground="{TemplateBinding Foreground}" 
                                HorizontalContentAlignment="Stretch"
                                VerticalContentAlignment="Stretch"/>
                                    -->

                                        <Grid Height="Auto" Margin="0,0,0,0" Grid.Row="0" Grid.Column="0" >
                                            <TextBox FontFamily="{DynamicResource Font_Base}" FontSize="12" Height="Auto" Style="{DynamicResource TextBox_Singleline}" x:Name="PART_TextBox" Text="{Binding Path=SelectedDate,Converter={StaticResource DateTimeFormatter},RelativeSource={RelativeSource AncestorType={x:Type Custom:DatePicker}},ConverterParameter=dd-MM-yyyy}"/>
                                        </Grid>

                                        <Grid x:Name="PART_DisabledVisual" 
                                  Opacity="0" 
                                  IsHitTestVisible="False" 
                                  Grid.Row="0" Grid.Column="0"
                                  Grid.ColumnSpan="2">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Rectangle Grid.Row="0" Grid.Column="0" RadiusX="1" RadiusY="1" Fill="#A5FFFFFF"/>
                                            <Rectangle Grid.Row="0" Grid.Column="1" RadiusX="1" RadiusY="1" Fill="#A5FFFFFF" Height="18" Width="19" Margin="3,0,3,0" />
                                            <Popup x:Name="PART_Popup"
                                       PlacementTarget="{Binding ElementName=PART_Button}"
                                       Placement="Bottom" 
                                       StaysOpen="False"
                                       AllowsTransparency="True" PopupAnimation="Fade">

                                                <!--<Popup.Style>
                                                <Style TargetType="Popup">
                                                    <Setter Property="Background" Value="Transparent"/>
                                                </Style>
                                            </Popup.Style>-->
                                            </Popup>
                                        </Grid>
                                    </Grid>
                                </Border.Child>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>



            <Style x:Key="DatePickerStyle" TargetType="Custom:DatePicker">
                <Setter Property="IsTabStop" Value="False"/>
                <Setter Property="Background" Value="#FFFFFFFF"/>
                <Setter Property="Padding" Value="2"/>
                <!--<Setter Property="SelectionBackground" Value="#FF444444"/>-->
                <Setter Property="BorderBrush">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint=".5,0" StartPoint=".5,1">
                            <GradientStop Color="#FF617584" Offset="0"/>
                            <GradientStop Color="#FF718597" Offset="0.375"/>
                            <GradientStop Color="#FF8399A9" Offset="0.375"/>
                            <GradientStop Color="#FFA3AEB9" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Custom:DatePicker">
                            <Grid x:Name="Root">
                                <Grid.Resources>
                                    <SolidColorBrush x:Key="DisabledBrush" Color="#8CFFFFFF"/>
                                    <ControlTemplate x:Key="DropDownButtonTemplate" TargetType="Button">
                                        <Grid>

                                            <!--<VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualStateGroup.Transitions>
                                                    <VisualTransition GeneratedDuration="0"/>
                                                    <VisualTransition GeneratedDuration="0:0:0.1" To="MouseOver"/>
                                                    <VisualTransition GeneratedDuration="0:0:0.1" To="Pressed"/>
                                                </VisualStateGroup.Transitions>
                                                <VisualState x:Name="Normal"/>
                                                <VisualState x:Name="MouseOver">
                                                    <Storyboard>
                                                        <ColorAnimation Duration="0" Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#FF448DCA"/>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)">
                                                            <SplineColorKeyFrame KeyTime="0" Value="#7FFFFFFF"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
                                                            <SplineColorKeyFrame KeyTime="0" Value="#CCFFFFFF"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                            <SplineColorKeyFrame KeyTime="0" Value="#F2FFFFFF"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Pressed">
                                                    <Storyboard>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                                            <SplineColorKeyFrame KeyTime="0" Value="#FF448DCA"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                        <DoubleAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetName="Highlight" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                            <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                                        </DoubleAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                            <SplineColorKeyFrame KeyTime="0" Value="#EAFFFFFF"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
                                                            <SplineColorKeyFrame KeyTime="0" Value="#C6FFFFFF"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)">
                                                            <SplineColorKeyFrame KeyTime="0" Value="#6BFFFFFF"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                                            <SplineColorKeyFrame KeyTime="0" Value="#F4FFFFFF"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Disabled">
                                                    <Storyboard>
                                                        <DoubleAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetName="DisabledVisual" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                            <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                                        </DoubleAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>-->
                                            <Grid Height="48" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center" Width="49" Background="#11FFFFFF">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="6*"/>
                                                    <ColumnDefinition Width="19*"/>
                                                    <ColumnDefinition Width="19*"/>
                                                    <ColumnDefinition Width="19*"/>
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="6*"/>
                                                    <RowDefinition Height="20*"/>
                                                    <RowDefinition Height="20*"/>
                                                    <RowDefinition Height="20*"/>
                                                </Grid.RowDefinitions>
                                                <Border x:Name="Highlight" Margin="-1" Opacity="0" Grid.ColumnSpan="4" Grid.Row="0" Grid.RowSpan="4" BorderBrush="#FF6DBDD1" BorderThickness="1" CornerRadius="0,0,1,1"/>
                                                <Border x:Name="Background" Margin="0,-1,0,0" Opacity="1" Grid.ColumnSpan="4" Grid.Row="1" Grid.RowSpan="3" Background="#FF1F3B53" BorderBrush="#FFFFFFFF" BorderThickness="1" CornerRadius=".5"/>
                                                <Border x:Name="BackgroundGradient" Margin="0,-1,0,0" Opacity="1" Grid.ColumnSpan="4" Grid.Row="1" Grid.RowSpan="3" BorderBrush="#BF000000" BorderThickness="1" CornerRadius=".5">
                                                    <Border.Background>
                                                        <LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
                                                            <GradientStop Color="#FFFFFFFF" Offset="0"/>
                                                            <GradientStop Color="#F9FFFFFF" Offset="0.375"/>
                                                            <GradientStop Color="#E5FFFFFF" Offset="0.625"/>
                                                            <GradientStop Color="#C6FFFFFF" Offset="1"/>
                                                        </LinearGradientBrush>
                                                    </Border.Background>
                                                </Border>
                                                <Rectangle StrokeThickness="1" Grid.ColumnSpan="4" Grid.RowSpan="2" Margin="0,0,0,2">
                                                    <Rectangle.Stroke>
                                                        <LinearGradientBrush EndPoint="0.48,-1" StartPoint="0.48,1.25">
                                                            <GradientStop Color="#FF494949"/>
                                                            <GradientStop Color="#FF9F9F9F" Offset="1"/>
                                                        </LinearGradientBrush>
                                                    </Rectangle.Stroke>
                                                    <Rectangle.Fill>
                                                        <LinearGradientBrush EndPoint="0.3,-1.1" StartPoint="0.46,1.6">
                                                            <GradientStop Color="#FFBD4A40"/>
                                                            <GradientStop Color="#FFEAAFAF" Offset="1"/>
                                                        </LinearGradientBrush>
                                                    </Rectangle.Fill>
                                                </Rectangle>
                                                <TextBlock
                                        Text="Sept '08"
                                        HorizontalAlignment="Center" 
                                        VerticalAlignment="Center" 
                                        Margin="0,0,0,3"
                                        Grid.Column="0" 
                                        Grid.ColumnSpan="4" 
                                        Grid.Row="0" 
                                        Grid.RowSpan="2" 
                                        />
                                                <TextBlock
                                        Text="04"
                                        HorizontalAlignment="Center" 
                                        VerticalAlignment="Bottom" 
                                        FontSize="26" Margin="0,0,0,-3" 
                                        Grid.Column="0" 
                                        Grid.ColumnSpan="4" 
                                        Grid.Row="2" 
                                        Grid.RowSpan="2" />

                                                <Border x:Name="DisabledVisual" Opacity="0" Grid.ColumnSpan="4" Grid.Row="0" Grid.RowSpan="4" BorderBrush="#B2FFFFFF" BorderThickness="1" CornerRadius="0,0,.5,.5"/>
                                            </Grid>
                                        </Grid>
                                    </ControlTemplate>
                                </Grid.Resources>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <!--<VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="DisabledVisual" Storyboard.TargetProperty="Opacity" To="1"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>-->
                                <Button 
                        x:Name="Button" 
                        Margin="2,0,2,0" 
                        Width="50" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        Foreground="{TemplateBinding Foreground}" 
                        Template="{StaticResource DropDownButtonTemplate}" 
                        Content="{TemplateBinding SelectedDate}"
                        Grid.Column="1" />
                                <Grid x:Name="DisabledVisual" IsHitTestVisible="False" Opacity="0" Grid.ColumnSpan="2">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Rectangle Fill="#8CFFFFFF" RadiusX="1" RadiusY="1"/>
                                    <Rectangle Fill="#8CFFFFFF" RadiusX="1" RadiusY="1" Height="18" Margin="2,0,2,0" Width="19" Grid.Column="1"/>
                                </Grid>
                                <Popup x:Name="Popup"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="TextBox_Singleline" TargetType="{x:Type TextBox}">
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
                <Setter Property="BorderBrush" Value="#FF7F9DB9"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="AllowDrop" Value="true"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Border x:Name="Bd" SnapsToDevicePixels="true" Background="White" BorderBrush="{DynamicResource Brush_BorderDarkerGrey}" BorderThickness="1" CornerRadius="5">
                                <Grid Height="Auto">
                                    <Border HorizontalAlignment="Stretch" Margin="0,0,1,1" Width="Auto" BorderBrush="{DynamicResource Brush_BorderGrey}" BorderThickness="1,1,0,0" CornerRadius="4"/>
                                    <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" d:LayoutOverrides="Width, Height"/>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="PasswordBox" TargetType="{x:Type PasswordBox}">
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
                <Setter Property="BorderBrush" Value="#FF7F9DB9"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="AllowDrop" Value="true"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type PasswordBox}">
                            <Border x:Name="Bd" SnapsToDevicePixels="true" Background="White" BorderBrush="{DynamicResource Brush_BorderDarkerGrey}" BorderThickness="1" CornerRadius="5">
                                <Grid Height="Auto">
                                    <Border HorizontalAlignment="Stretch" Margin="0,0,1,1" Width="Auto" BorderBrush="{DynamicResource Brush_BorderGrey}" BorderThickness="1,1,0,0" CornerRadius="4"/>
                                    <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" d:LayoutOverrides="Width, Height"/>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ToolBar_Header_Trans" TargetType="{x:Type ToolBar}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToolBar}">
                            <Grid x:Name="Grid" SnapsToDevicePixels="true">
                                <Border x:Name="MainPanelBorder" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5" Padding="{TemplateBinding Padding}" Background="Transparent">
                                    <!-- {DynamicResource Brush_GlossyGrey}-->
                                    <DockPanel KeyboardNavigation.TabIndex="1" KeyboardNavigation.TabNavigation="Local">
                                        <ContentPresenter x:Name="ToolBarHeader" HorizontalAlignment="Center" Margin="4,0,4,0" VerticalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ContentSource="Header"/>
                                        <ToolBarPanel x:Name="PART_ToolBarPanel" Margin="1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" IsItemsHost="true"/>
                                    </DockPanel>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsOverflowOpen" Value="true"/>
                                <Trigger Property="Header" Value="{x:Null}">
                                    <Setter Property="Visibility" TargetName="ToolBarHeader" Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="ToolBarTray.IsLocked" Value="true"/>
                                <Trigger Property="Orientation" Value="Vertical">
                                    <Setter Property="Margin" TargetName="Grid" Value="1,3,1,1"/>
                                    <Setter Property="Margin" TargetName="ToolBarHeader" Value="0,0,0,4"/>
                                    <Setter Property="Margin" TargetName="PART_ToolBarPanel" Value="1,0,2,2"/>
                                    <Setter Property="DockPanel.Dock" TargetName="ToolBarHeader" Value="Top"/>
                                    <Setter Property="Margin" TargetName="MainPanelBorder" Value="0,0,0,11"/>
                                    <!--<Setter Property="Background">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
                                            <GradientStop Color="#FAF9F5" Offset="0"/>
                                            <GradientStop Color="#EBE7E0" Offset="0.5"/>
                                            <GradientStop Color="#C0C0A8" Offset="0.9"/>
                                            <GradientStop Color="#A3A37C" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>-->
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ToolBar_Header" TargetType="{x:Type ToolBar}">
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                            <GradientStop Color="#FAF9F5" Offset="0"/>
                            <GradientStop Color="#EBE7E0" Offset="0.5"/>
                            <GradientStop Color="#C0C0A8" Offset="0.9"/>
                            <GradientStop Color="#A3A37C" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToolBar}">
                            <Grid x:Name="Grid" SnapsToDevicePixels="true">
                                <Border x:Name="MainPanelBorder" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5" Padding="{TemplateBinding Padding}" Background="{DynamicResource Brush_GlossyGrey}">
                                    <DockPanel KeyboardNavigation.TabIndex="1" KeyboardNavigation.TabNavigation="Local">
                                        <ContentPresenter x:Name="ToolBarHeader" HorizontalAlignment="Center" Margin="4,0,4,0" VerticalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ContentSource="Header"/>
                                        <ToolBarPanel x:Name="PART_ToolBarPanel" Margin="1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" IsItemsHost="true"/>
                                    </DockPanel>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsOverflowOpen" Value="true"/>
                                <Trigger Property="Header" Value="{x:Null}">
                                    <Setter Property="Visibility" TargetName="ToolBarHeader" Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="ToolBarTray.IsLocked" Value="true"/>
                                <Trigger Property="Orientation" Value="Vertical">
                                    <Setter Property="Margin" TargetName="Grid" Value="1,3,1,1"/>
                                    <Setter Property="Margin" TargetName="ToolBarHeader" Value="0,0,0,4"/>
                                    <Setter Property="Margin" TargetName="PART_ToolBarPanel" Value="1,0,2,2"/>
                                    <Setter Property="DockPanel.Dock" TargetName="ToolBarHeader" Value="Top"/>
                                    <Setter Property="Margin" TargetName="MainPanelBorder" Value="0,0,0,11"/>
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
                                                <GradientStop Color="#FAF9F5" Offset="0"/>
                                                <GradientStop Color="#EBE7E0" Offset="0.5"/>
                                                <GradientStop Color="#C0C0A8" Offset="0.9"/>
                                                <GradientStop Color="#A3A37C" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="Button_ModalClose" TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle">
                    <Setter.Value>
                        <Style>
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Rectangle Margin="3" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFFFFFFF" Offset="0"/>
                            <GradientStop Color="#FFF0F0EA" Offset="0.9"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderBrush" Value="#FF003C74"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <ControlTemplate.Resources>
                                <Storyboard x:Key="SB_MouseOver"/>
                            </ControlTemplate.Resources>
                            <Grid Width="35" Height="35">
                                <Ellipse x:Name="ellipse" Fill="Black" Stroke="White" StrokeThickness="3">
                                    <Ellipse.Effect>
                                        <DropShadowEffect ShadowDepth="0" Direction="0"/>
                                    </Ellipse.Effect>
                                </Ellipse>
                                <Image HorizontalAlignment="Center" Stretch="None" VerticalAlignment="Center"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.ExitActions>
                                        <RemoveStoryboard BeginStoryboardName="SB_MouseOver_BeginStoryboard"/>
                                    </Trigger.ExitActions>
                                    <Trigger.EnterActions>
                                        <BeginStoryboard x:Name="SB_MouseOver_BeginStoryboard" Storyboard="{StaticResource SB_MouseOver}"/>
                                    </Trigger.EnterActions>
                                    <Setter Property="Fill" TargetName="ellipse" Value="#FF666666"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="true"/>
                                <Trigger Property="ToggleButton.IsChecked" Value="true"/>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="Button_SearchBox_Flyout" TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle">
                    <Setter.Value>
                        <Style>
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Rectangle Margin="3" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFFFFFFF" Offset="0"/>
                            <GradientStop Color="#FFF0F0EA" Offset="0.9"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderBrush" Value="#FF003C74"/>
                <Setter Property="Foreground" Value="{DynamicResource Brush_DarkGrey}"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Margin" Value="0,0,0,1"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="FontFamily" Value="{DynamicResource Font_Base}"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <ControlTemplate.Resources>
                                <Storyboard x:Key="SB_MouseOver">
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="content">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.7"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </ControlTemplate.Resources>
                            <Grid Height="Auto" Background="{TemplateBinding Background}">
                                <Border x:Name="border" BorderBrush="#FFD4C590" BorderThickness="1,1,0,0" d:LayoutOverrides="Width, Height">
                                    <TextBlock x:Name="content" Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Left" Margin="10,6" VerticalAlignment="Center" TextWrapping="Wrap"/>
                                </Border>
                                <Border HorizontalAlignment="Stretch" BorderBrush="#FFE0D4A9" BorderThickness="1,1,0,0" Margin="1,1,0,0"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.ExitActions>
                                        <RemoveStoryboard BeginStoryboardName="SB_MouseOver_BeginStoryboard"/>
                                    </Trigger.ExitActions>
                                    <Trigger.EnterActions>
                                        <BeginStoryboard x:Name="SB_MouseOver_BeginStoryboard" Storyboard="{StaticResource SB_MouseOver}"/>
                                    </Trigger.EnterActions>
                                    <Setter Property="Background" TargetName="border" Value="#FFFCF1B7"/>
                                    <Setter Property="FontWeight" Value="Bold"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="true"/>
                                <Trigger Property="ToggleButton.IsChecked" Value="true"/>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ListBox_SearchBox_Options" TargetType="{x:Type ListBox}">
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
                <Setter Property="Foreground" Value="{DynamicResource Brush_DarkGrey}"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBox}">
                            <Border x:Name="Bd" SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                <ScrollViewer Padding="{TemplateBinding Padding}" Focusable="false">
                                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </ScrollViewer>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                </Trigger>
                                <Trigger Property="IsGrouping" Value="true">
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderThickness" Value="0"/>
            </Style>
            <Style x:Key="ListBoxItem_SearchBox_Options" TargetType="{x:Type ListBoxItem}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="Padding" Value="2,0,0,0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                            <Grid Height="Auto">
                                <Border HorizontalAlignment="Stretch" BorderBrush="#FFE0D4A9" BorderThickness="1,1,0,0" Margin="1,1,0,0"/>
                                <Border x:Name="Bd" SnapsToDevicePixels="true" BorderBrush="#FFC1B075" BorderThickness="1,1,0,0" d:LayoutOverrides="Width, Height">
                                    <Border.Background>
                                        <SolidColorBrush/>
                                    </Border.Background>
                                    <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="10,10,6,6"/>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="true">
                                    <Setter Property="Background" TargetName="Bd" Value="{DynamicResource Brush_HighlightItem}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="FontFamily" Value="{DynamicResource Font_Base}"/>
                <Setter Property="FontSize" Value="14"/>
            </Style>
            <Style x:Key="CheckBox_DataGridShowRowDetails" TargetType="{x:Type CheckBox}">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush>
                            <GradientStop Color="#FFD2D4D2" Offset="0"/>
                            <GradientStop Color="#FFFFFFFF" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderBrush">
                    <Setter.Value>
                        <LinearGradientBrush>
                            <GradientStop Color="#FF004C94" Offset="0"/>
                            <GradientStop Color="#FF003C74" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="FocusVisualStyle">
                    <Setter.Value>
                        <Style>
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Rectangle Stroke="Black" StrokeDashArray="1 2" StrokeThickness="1" Margin="1" SnapsToDevicePixels="true"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">
                            <ControlTemplate.Resources>
                                <Storyboard x:Key="SB_Checked">
                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="180"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="SB_Unchecked">
                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </ControlTemplate.Resources>
                            <Grid>
                                <Border HorizontalAlignment="Center" VerticalAlignment="Center" Width="18" Height="18" Background="{DynamicResource Brush_GlossyLightGrey}" BorderBrush="{DynamicResource Brush_BorderDarkerGrey}" BorderThickness="1" CornerRadius="3">
                                    <Border.Effect>
                                        <DropShadowEffect BlurRadius="3" ShadowDepth="2"/>
                                    </Border.Effect>
                                    <Path x:Name="path" Stretch="Fill" StrokeLineJoin="Round" Data="F1 M 75.5,131.038L 121.432,51.4811L 29.568,51.4811L 75.5,131.038 Z " Width="9" Height="6" Fill="{DynamicResource Brush_TextRed}" HorizontalAlignment="Center" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
                                        <Path.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform/>
                                                <SkewTransform/>
                                                <RotateTransform/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </Path.RenderTransform>
                                    </Path>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Trigger.ExitActions>
                                        <BeginStoryboard x:Name="SB_Unchecked_BeginStoryboard" Storyboard="{StaticResource SB_Unchecked}"/>
                                    </Trigger.ExitActions>
                                    <Trigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource SB_Checked}"/>
                                    </Trigger.EnterActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="DataGridRow" TargetType="{x:Type Custom:DataGridRow}">
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
                <Setter Property="ValidationErrorTemplate">
                    <Setter.Value>
                        <ControlTemplate>
                            <TextBlock Margin="2,0,0,0" VerticalAlignment="Center" Foreground="Red" Text="!"><Run Text="!"/></TextBlock>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Custom:DataGridRow}">
                            <Border x:Name="DGR_Border" SnapsToDevicePixels="True" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                <Custom:SelectiveScrollingGrid>
                                    <Custom:SelectiveScrollingGrid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Custom:SelectiveScrollingGrid.ColumnDefinitions>
                                    <Custom:SelectiveScrollingGrid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="Auto"/>
                                    </Custom:SelectiveScrollingGrid.RowDefinitions>
                                    <Custom:DataGridCellsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ItemsPanel="{TemplateBinding ItemsPanel}" Grid.Column="1"/>
                                    <Custom:DataGridDetailsPresenter Visibility="{TemplateBinding DetailsVisibility}" Grid.Column="1" Grid.Row="1">
                                        <Custom:SelectiveScrollingGrid.SelectiveScrollingOrientation>
                                            <Binding Path="AreRowDetailsFrozen" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Custom:DataGrid}}">
                                                <Binding.ConverterParameter>
                                                    <Custom:SelectiveScrollingOrientation>Vertical</Custom:SelectiveScrollingOrientation>
                                                </Binding.ConverterParameter>
                                            </Binding>
                                        </Custom:SelectiveScrollingGrid.SelectiveScrollingOrientation>
                                    </Custom:DataGridDetailsPresenter>
                                    <Custom:DataGridRowHeader Grid.RowSpan="2" Custom:SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical" Visibility="Collapsed"/>
                                </Custom:SelectiveScrollingGrid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Selector.IsSelected" Value="True">
                                    <Setter Property="Background" TargetName="DGR_Border" Value="{DynamicResource Brush_HighlightItem}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>

        

    </Application.Resources>


</Application>
